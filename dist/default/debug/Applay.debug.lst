

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Feb 27 23:26:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 23/03/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4620 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataCOMRAM
    68   001758                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _port_reg
    72   001758  80                 	db	128
    73   001759  0F                 	db	15
    74   00175A  81                 	db	129
    75   00175B  0F                 	db	15
    76   00175C  82                 	db	130
    77   00175D  0F                 	db	15
    78   00175E  83                 	db	131
    79   00175F  0F                 	db	15
    80   001760  84                 	db	132
    81   001761  0F                 	db	15
    82                           
    83                           ;initializer for _lat_reg
    84   001762  89                 	db	137
    85   001763  0F                 	db	15
    86   001764  8A                 	db	138
    87   001765  0F                 	db	15
    88   001766  8B                 	db	139
    89   001767  0F                 	db	15
    90   001768  8C                 	db	140
    91   001769  0F                 	db	15
    92   00176A  8D                 	db	141
    93   00176B  0F                 	db	15
    94                           
    95                           ;initializer for _tris_reg
    96   00176C  92                 	db	146
    97   00176D  0F                 	db	15
    98   00176E  93                 	db	147
    99   00176F  0F                 	db	15
   100   001770  94                 	db	148
   101   001771  0F                 	db	15
   102   001772  95                 	db	149
   103   001773  0F                 	db	15
   104   001774  96                 	db	150
   105   001775  0F                 	db	15
   106                           
   107                           ;initializer for _SEVEN_SEGMENT_CA_VALUES
   108   001776  C0                 	db	192
   109   001777  F9                 	db	249
   110   001778  A4                 	db	164
   111   001779  B0                 	db	176
   112   00177A  99                 	db	153
   113   00177B  92                 	db	146
   114   00177C  82                 	db	130
   115   00177D  F8                 	db	248
   116   00177E  80                 	db	128
   117   00177F  90                 	db	144
   118                           
   119                           ;initializer for _SEVEN_SEGMENT_CC_VALUES
   120   001780  3F                 	db	63
   121   001781  06                 	db	6
   122   001782  5B                 	db	91
   123   001783  4F                 	db	79
   124   001784  66                 	db	102
   125   001785  6D                 	db	109
   126   001786  7D                 	db	125
   127   001787  07                 	db	7
   128   001788  7F                 	db	127
   129   001789  6F                 	db	111
   130                           
   131                           ;initializer for _h1
   132   00178A  1F                 	db	31
   133   00178B  1F                 	db	31
   134   00178C  1B                 	db	27
   135   00178D  11                 	db	17
   136   00178E  00                 	db	0
   137   00178F  11                 	db	17
   138   001790  1B                 	db	27
   139   001791  1F                 	db	31
   140                           
   141                           ;initializer for _hh2
   142   001792  0C                 	db	12
   143   001793  12                 	db	18
   144   001794  01                 	db	1
   145   001795  01                 	db	1
   146   001796  02                 	db	2
   147   001797  04                 	db	4
   148   001798  08                 	db	8
   149   001799  10                 	db	16
   150                           
   151                           ;initializer for _hh1
   152   00179A  06                 	db	6
   153   00179B  09                 	db	9
   154   00179C  10                 	db	16
   155   00179D  10                 	db	16
   156   00179E  08                 	db	8
   157   00179F  04                 	db	4
   158   0017A0  02                 	db	2
   159   0017A1  01                 	db	1
   160                           
   161                           ;initializer for _cc2
   162   0017A2  0E                 	db	14
   163   0017A3  0A                 	db	10
   164   0017A4  11                 	db	17
   165   0017A5  11                 	db	17
   166   0017A6  1F                 	db	31
   167   0017A7  1F                 	db	31
   168   0017A8  1F                 	db	31
   169   0017A9  00                 	db	0
   170                           
   171                           ;initializer for _cc1
   172   0017AA  0E                 	db	14
   173   0017AB  0A                 	db	10
   174   0017AC  11                 	db	17
   175   0017AD  11                 	db	17
   176   0017AE  11                 	db	17
   177   0017AF  11                 	db	17
   178   0017B0  1F                 	db	31
   179   0017B1  00                 	db	0
   180                           
   181                           	psect	idataBANK0
   182   00191A                     __pidataBANK0:
   183                           	callstack 0
   184                           
   185                           ;initializer for _keypad_values
   186   00191A  37                 	db	55
   187   00191B  38                 	db	56
   188   00191C  39                 	db	57
   189   00191D  2F                 	db	47
   190   00191E  34                 	db	52
   191   00191F  35                 	db	53
   192   001920  36                 	db	54
   193   001921  2A                 	db	42
   194   001922  31                 	db	49
   195   001923  32                 	db	50
   196   001924  33                 	db	51
   197   001925  2D                 	db	45
   198   001926  47                 	db	71
   199   001927  30                 	db	48
   200   001928  3D                 	db	61
   201   001929  2B                 	db	43
   202                           
   203                           ;initializer for _calc_v1
   204   00192A  00                 	db	0
   205   00192B  08                 	db	8
   206   00192C  10                 	db	16
   207   00192D  18                 	db	24
   208   00192E  41                 	db	65
   209   00192F  49                 	db	73
   210   001930  51                 	db	81
   211   001931  59                 	db	89
   212   001932  00                 	db	0
   213   001933  02                 	db	2
   214   001934  12                 	db	18
   215   001935  0A                 	db	10
   216   001936  03                 	db	3
   217   001937  0B                 	db	11
   218   001938  13                 	db	19
   219   001939  1B                 	db	27
   220   00193A  23                 	db	35
   221   00193B  2B                 	db	43
   222   00193C  33                 	db	51
   223   00193D  3B                 	db	59
   224                           
   225                           	psect	nvCOMRAM
   226   00007B                     __pnvCOMRAM:
   227                           	callstack 0
   228   00007B                     _program_state:
   229                           	callstack 0
   230   00007B                     	ds	1
   231   000000                     _PORTE	set	3972
   232   000000                     _PORTD	set	3971
   233   000000                     _PORTC	set	3970
   234   000000                     _PORTB	set	3969
   235   000000                     _PORTA	set	3968
   236   000000                     _LATA	set	3977
   237   000000                     _TRISA	set	3986
   238   000000                     _TRISE	set	3990
   239   000000                     _TRISD	set	3989
   240   000000                     _TRISC	set	3988
   241   000000                     _TRISB	set	3987
   242   000000                     _LATE	set	3981
   243   000000                     _LATD	set	3980
   244   000000                     _LATC	set	3979
   245   000000                     _LATB	set	3978
   246                           
   247                           ; #config settings
   248                           
   249                           	psect	cinit
   250   0017B2                     __pcinit:
   251                           	callstack 0
   252   0017B2                     start_initialization:
   253                           	callstack 0
   254   0017B2                     __initialization:
   255                           	callstack 0
   256                           
   257                           ; Initialize objects allocated to BANK0 (36 bytes)
   258                           ; load TBLPTR registers with __pidataBANK0
   259   0017B2  0E1A               	movlw	low __pidataBANK0
   260   0017B4  6EF6               	movwf	tblptrl,c
   261   0017B6  0E19               	movlw	high __pidataBANK0
   262   0017B8  6EF7               	movwf	tblptrh,c
   263   0017BA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   264   0017BC  6EF8               	movwf	tblptru,c
   265   0017BE  EE00  F080         	lfsr	0,__pdataBANK0
   266   0017C2  EE10 F024          	lfsr	1,36
   267   0017C6                     copy_data0:
   268   0017C6  0009               	tblrd		*+
   269   0017C8  CFF5 FFEE          	movff	tablat,postinc0
   270   0017CC  50E5               	movf	postdec1,w,c
   271   0017CE  50E1               	movf	fsr1l,w,c
   272   0017D0  E1FA               	bnz	copy_data0
   273                           
   274                           ; Initialize objects allocated to COMRAM (90 bytes)
   275                           ; load TBLPTR registers with __pidataCOMRAM
   276   0017D2  0E58               	movlw	low __pidataCOMRAM
   277   0017D4  6EF6               	movwf	tblptrl,c
   278   0017D6  0E17               	movlw	high __pidataCOMRAM
   279   0017D8  6EF7               	movwf	tblptrh,c
   280   0017DA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   281   0017DC  6EF8               	movwf	tblptru,c
   282   0017DE  EE00  F001         	lfsr	0,__pdataCOMRAM
   283   0017E2  EE10 F05A          	lfsr	1,90
   284   0017E6                     copy_data1:
   285   0017E6  0009               	tblrd		*+
   286   0017E8  CFF5 FFEE          	movff	tablat,postinc0
   287   0017EC  50E5               	movf	postdec1,w,c
   288   0017EE  50E1               	movf	fsr1l,w,c
   289   0017F0  E1FA               	bnz	copy_data1
   290                           
   291                           ; Clear objects allocated to COMRAM (8 bytes)
   292   0017F2  EE00  F073         	lfsr	0,__pbssCOMRAM
   293   0017F6  0E08               	movlw	8
   294   0017F8                     clear_0:
   295   0017F8  6AEE               	clrf	postinc0,c
   296   0017FA  06E8               	decf	wreg,f,c
   297   0017FC  E1FD               	bnz	clear_0
   298   0017FE                     end_of_initialization:
   299                           	callstack 0
   300   0017FE                     __end_of__initialization:
   301                           	callstack 0
   302   0017FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   303   001800  6EF8               	movwf	tblptru,c
   304   001802  0100               	movlb	0
   305   001804  EF75  F00C         	goto	_main	;jump to C main() function
   306                           
   307                           	psect	bssCOMRAM
   308   000073                     __pbssCOMRAM:
   309                           	callstack 0
   310   000073                     relay_turn_off@F3067:
   311                           	callstack 0
   312   000073                     	ds	1
   313   000074                     relay_turn_on@F3062:
   314                           	callstack 0
   315   000074                     	ds	1
   316   000075                     relay_initialize@F3057:
   317                           	callstack 0
   318   000075                     	ds	1
   319   000076                     led_toggle@F3079:
   320                           	callstack 0
   321   000076                     	ds	1
   322   000077                     led_turn_off@F3074:
   323                           	callstack 0
   324   000077                     	ds	1
   325   000078                     led_turn_on@F3069:
   326                           	callstack 0
   327   000078                     	ds	1
   328   000079                     led_initialize@F3064:
   329                           	callstack 0
   330   000079                     	ds	1
   331   00007A                     _value:
   332                           	callstack 0
   333   00007A                     	ds	1
   334                           
   335                           	psect	dataCOMRAM
   336   000001                     __pdataCOMRAM:
   337                           	callstack 0
   338   000001                     _port_reg:
   339                           	callstack 0
   340   000001                     	ds	10
   341   00000B                     _lat_reg:
   342                           	callstack 0
   343   00000B                     	ds	10
   344   000015                     _tris_reg:
   345                           	callstack 0
   346   000015                     	ds	10
   347   00001F                     _SEVEN_SEGMENT_CA_VALUES:
   348                           	callstack 0
   349   00001F                     	ds	10
   350   000029                     _SEVEN_SEGMENT_CC_VALUES:
   351                           	callstack 0
   352   000029                     	ds	10
   353   000033                     _h1:
   354                           	callstack 0
   355   000033                     	ds	8
   356   00003B                     _hh2:
   357                           	callstack 0
   358   00003B                     	ds	8
   359   000043                     _hh1:
   360                           	callstack 0
   361   000043                     	ds	8
   362   00004B                     _cc2:
   363                           	callstack 0
   364   00004B                     	ds	8
   365   000053                     _cc1:
   366                           	callstack 0
   367   000053                     	ds	8
   368                           
   369                           	psect	dataBANK0
   370   000080                     __pdataBANK0:
   371                           	callstack 0
   372   000080                     _keypad_values:
   373                           	callstack 0
   374   000080                     	ds	16
   375   000090                     _calc_v1:
   376                           	callstack 0
   377   000090                     	ds	20
   378                           
   379                           	psect	cstackCOMRAM
   380   00005B                     __pcstackCOMRAM:
   381                           	callstack 0
   382   00005B                     gpio_pin_direction_initialize@_pin_config:
   383                           	callstack 0
   384   00005B                     gpio_pin_write_logic@_pin_config:
   385                           	callstack 0
   386   00005B                     gpio_pin_read_logic@_pin_config:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x0
   390   00005B                     	ds	1
   391   00005C                     ??_gpio_pin_direction_initialize:
   392   00005C                     gpio_pin_write_logic@_logic:
   393                           	callstack 0
   394   00005C                     gpio_pin_read_logic@_logic:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x1
   398   00005C                     	ds	1
   399   00005D                     ??_gpio_pin_read_logic:
   400   00005D                     ??_gpio_pin_write_logic:
   401                           
   402                           ; 1 bytes @ 0x2
   403   00005D                     	ds	4
   404   000061                     gpio_pin_direction_initialize@Status:
   405                           	callstack 0
   406   000061                     gpio_pin_read_logic@Status:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x6
   410   000061                     	ds	1
   411   000062                     gpio_pin_write_logic@Status:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x7
   415   000062                     	ds	1
   416   000063                     keypad_get_value@_keypad:
   417                           	callstack 0
   418   000063                     lcd_send_8bit_enable@_lcd:
   419                           	callstack 0
   420   000063                     gpio_pin_initialize@_pin_config:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x8
   424   000063                     	ds	1
   425   000064                     keypad_get_value@_value:
   426                           	callstack 0
   427   000064                     lcd_send_8bit_enable@ret:
   428                           	callstack 0
   429   000064                     gpio_pin_initialize@Status:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x9
   433   000064                     	ds	1
   434   000065                     keypad_initialize@_keypad:
   435                           	callstack 0
   436   000065                     lcd_8bit_send_command@_lcd:
   437                           	callstack 0
   438   000065                     lcd_8bit_send_data@_lcd:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0xA
   442   000065                     	ds	1
   443   000066                     keypad_initialize@ret:
   444                           	callstack 0
   445   000066                     keypad_get_value@is_pressed:
   446                           	callstack 0
   447   000066                     lcd_8bit_send_command@_command:
   448                           	callstack 0
   449   000066                     lcd_8bit_send_data@_data:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0xB
   453   000066                     	ds	1
   454   000067                     ??_lcd_8bit_send_command:
   455   000067                     ??_lcd_8bit_send_data:
   456   000067                     keypad_initialize@counter:
   457                           	callstack 0
   458   000067                     keypad_get_value@ret:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0xC
   462   000067                     	ds	1
   463   000068                     keypad_get_value@col_state:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0xD
   467   000068                     	ds	1
   468   000069                     lcd_8bit_send_command@ret:
   469                           	callstack 0
   470   000069                     lcd_8bit_send_data@ret:
   471                           	callstack 0
   472   000069                     keypad_get_value@col_counter:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xE
   476   000069                     	ds	1
   477   00006A                     lcd_8bit_send_command@counter:
   478                           	callstack 0
   479   00006A                     lcd_8bit_send_data@counter:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0xF
   483   00006A                     	ds	1
   484   00006B                     lcd_8bit_initialize@_lcd:
   485                           	callstack 0
   486   00006B                     keypad_get_value@row_counter:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x10
   490   00006B                     	ds	1
   491   00006C                     ??_lcd_8bit_initialize:
   492                           
   493                           ; 1 bytes @ 0x11
   494   00006C                     	ds	1
   495   00006D                     lcd_8bit_initialize@counter:
   496                           	callstack 0
   497   00006D                     calculator_get_key@_calc:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x12
   501   00006D                     	ds	1
   502   00006E                     lcd_8bit_initialize@ret:
   503                           	callstack 0
   504   00006E                     calculator_get_key@_value:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x13
   508   00006E                     	ds	1
   509   00006F                     calculator_initialize@_calc:
   510                           	callstack 0
   511   00006F                     calculator_get_key@ret:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x14
   515   00006F                     	ds	1
   516   000070                     calculator_initialize@ret:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x15
   520   000070                     	ds	1
   521   000071                     ??_main:
   522                           
   523                           ; 1 bytes @ 0x16
   524   000071                     	ds	2
   525                           
   526 ;;
   527 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   528 ;;
   529 ;; *************** function _main *****************
   530 ;; Defined at:
   531 ;;		line 18 in file "main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  2  544[None  ] int 
   538 ;; Registers used:
   539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;Total ram usage:        2 bytes
   550 ;; Hardware stack levels required when called: 6
   551 ;; This function calls:
   552 ;;		_calculator_get_key
   553 ;;		_ecu_layer_initialize
   554 ;; This function is called by:
   555 ;;		Startup code after reset
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text0
   560   0018EA                     __ptext0:
   561                           	callstack 0
   562   0018EA                     _main:
   563                           	callstack 25
   564   0018EA                     
   565                           ;main.c: 20:     ecu_layer_initialize();
   566   0018EA  EC9F  F00C         	call	_ecu_layer_initialize	;wreg free
   567   0018EE                     l3142:
   568                           
   569                           ;main.c: 25:     {;main.c: 26:         calculator_get_key(&calc_v1,&value);
   570   0018EE  0E90               	movlw	low _calc_v1
   571   0018F0  6E6D               	movwf	calculator_get_key@_calc^0,c
   572   0018F2  0E7A               	movlw	low _value
   573   0018F4  6E6E               	movwf	calculator_get_key@_value^0,c
   574   0018F6  EC23  F00C         	call	_calculator_get_key	;wreg free
   575   0018FA                     
   576                           ;main.c: 27:         _delay((unsigned long)((300)*(4000000UL/4000.0)));
   577   0018FA  0E02               	movlw	2
   578   0018FC  6E72               	movwf	(??_main+1)^0,c
   579   0018FE  0E86               	movlw	134
   580   001900  6E71               	movwf	??_main^0,c
   581   001902  0E99               	movlw	153
   582   001904                     u2237:
   583   001904  2EE8               	decfsz	wreg,f,c
   584   001906  D7FE               	bra	u2237
   585   001908  2E71               	decfsz	??_main^0,f,c
   586   00190A  D7FC               	bra	u2237
   587   00190C  2E72               	decfsz	(??_main+1)^0,f,c
   588   00190E  D7FA               	bra	u2237
   589   001910  0000               	nop	
   590   001912  EF77  F00C         	goto	l3142
   591   001916  EF00  F000         	goto	start
   592   00191A                     __end_of_main:
   593                           	callstack 0
   594                           
   595 ;; *************** function _ecu_layer_initialize *****************
   596 ;; Defined at:
   597 ;;		line 232 in file "ECU_Layer/ECU_layer_init.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used: 1
   617 ;; Hardware stack levels required when called: 5
   618 ;; This function calls:
   619 ;;		_calculator_initialize
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text1
   626   00193E                     __ptext1:
   627                           	callstack 0
   628   00193E                     _ecu_layer_initialize:
   629                           	callstack 25
   630   00193E                     
   631                           ;ECU_Layer/ECU_layer_init.c: 236:     program_state = calculator_initialize(&calc_v1);
   632   00193E  0E90               	movlw	low _calc_v1
   633   001940  6E6F               	movwf	calculator_initialize@_calc^0,c
   634   001942  EC5C  F00C         	call	_calculator_initialize	;wreg free
   635   001946  6E7B               	movwf	_program_state^0,c
   636   001948  0012               	return		;funcret
   637   00194A                     __end_of_ecu_layer_initialize:
   638                           	callstack 0
   639                           
   640 ;; *************** function _calculator_initialize *****************
   641 ;; Defined at:
   642 ;;		line 14 in file "Projects/project1_calc/calc.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  _calc           1   20[COMRAM] PTR const struct .
   645 ;;		 -> calc_v1(20), 
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  ret             1   21[COMRAM] unsigned char 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      unsigned char 
   650 ;; Registers used:
   651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   657 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;Total ram usage:        2 bytes
   662 ;; Hardware stack levels used: 1
   663 ;; Hardware stack levels required when called: 4
   664 ;; This function calls:
   665 ;;		_keypad_initialize
   666 ;;		_lcd_8bit_initialize
   667 ;; This function is called by:
   668 ;;		_ecu_layer_initialize
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text2
   673   0018B8                     __ptext2:
   674                           	callstack 0
   675   0018B8                     _calculator_initialize:
   676                           	callstack 25
   677   0018B8                     
   678                           ;Projects/project1_calc/calc.c: 17:     if(_calc != ((void*)0))
   679   0018B8  506F               	movf	calculator_initialize@_calc^0,w,c
   680   0018BA  B4D8               	btfsc	status,2,c
   681   0018BC  EF62  F00C         	goto	u1671
   682   0018C0  EF64  F00C         	goto	u1670
   683   0018C4                     u1671:
   684   0018C4  EF71  F00C         	goto	l2624
   685   0018C8                     u1670:
   686   0018C8                     
   687                           ;Projects/project1_calc/calc.c: 18:     {;Projects/project1_calc/calc.c: 19:         ret
      +                           = keypad_initialize(&(_calc->keypad));
   688   0018C8  C06F  F065         	movff	calculator_initialize@_calc,keypad_initialize@_keypad
   689   0018CC  EC7A  F00B         	call	_keypad_initialize	;wreg free
   690   0018D0  6E70               	movwf	calculator_initialize@ret^0,c
   691                           
   692                           ;Projects/project1_calc/calc.c: 20:         ret &=lcd_8bit_initialize(&(_calc->lcd));
   693   0018D2  506F               	movf	calculator_initialize@_calc^0,w,c
   694   0018D4  0F09               	addlw	9
   695   0018D6  6E6B               	movwf	lcd_8bit_initialize@_lcd^0,c
   696   0018D8  EC28  F00A         	call	_lcd_8bit_initialize	;wreg free
   697   0018DC  1670               	andwf	calculator_initialize@ret^0,f,c
   698                           
   699                           ;Projects/project1_calc/calc.c: 21:     }
   700   0018DE  EF73  F00C         	goto	l562
   701   0018E2                     l2624:
   702                           
   703                           ;Projects/project1_calc/calc.c: 23:     {;Projects/project1_calc/calc.c: 24:         ret
      +                           = (Std_ReturnType)0x00;
   704   0018E2  0E00               	movlw	0
   705   0018E4  6E70               	movwf	calculator_initialize@ret^0,c
   706   0018E6                     l562:
   707                           
   708                           ;Projects/project1_calc/calc.c: 26:     return ret;
   709   0018E6  5070               	movf	calculator_initialize@ret^0,w,c
   710   0018E8  0012               	return		;funcret
   711   0018EA                     __end_of_calculator_initialize:
   712                           	callstack 0
   713                           
   714 ;; *************** function _lcd_8bit_initialize *****************
   715 ;; Defined at:
   716 ;;		line 266 in file "ECU_Layer/LCD/ECU_LCD.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  _lcd            1   16[COMRAM] PTR const struct .
   719 ;;		 -> calc_v1(20), 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  ret             1   19[COMRAM] unsigned char 
   722 ;;  counter         1   18[COMRAM] unsigned char 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      unsigned char 
   725 ;; Registers used:
   726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   732 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;Total ram usage:        4 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 3
   739 ;; This function calls:
   740 ;;		_gpio_pin_initialize
   741 ;;		_lcd_8bit_send_command
   742 ;; This function is called by:
   743 ;;		_calculator_initialize
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text3
   748   001450                     __ptext3:
   749                           	callstack 0
   750   001450                     _lcd_8bit_initialize:
   751                           	callstack 25
   752   001450                     
   753                           ;ECU_Layer/LCD/ECU_LCD.c: 269:     uint8 counter = 0;
   754   001450  0E00               	movlw	0
   755   001452  6E6D               	movwf	lcd_8bit_initialize@counter^0,c
   756                           
   757                           ;ECU_Layer/LCD/ECU_LCD.c: 270:     if(_lcd != ((void*)0))
   758   001454  506B               	movf	lcd_8bit_initialize@_lcd^0,w,c
   759   001456  B4D8               	btfsc	status,2,c
   760   001458  EF30  F00A         	goto	u1471
   761   00145C  EF32  F00A         	goto	u1470
   762   001460                     u1471:
   763   001460  EFAE  F00A         	goto	l2480
   764   001464                     u1470:
   765   001464                     
   766                           ;ECU_Layer/LCD/ECU_LCD.c: 271:     {;ECU_Layer/LCD/ECU_LCD.c: 272:         ret = gpio_pi
      +                          n_initialize(&(_lcd->lcd_rs));
   767   001464  C06B  F063         	movff	lcd_8bit_initialize@_lcd,gpio_pin_initialize@_pin_config
   768   001468  EC04  F00C         	call	_gpio_pin_initialize	;wreg free
   769   00146C  6E6E               	movwf	lcd_8bit_initialize@ret^0,c
   770                           
   771                           ;ECU_Layer/LCD/ECU_LCD.c: 273:         ret = gpio_pin_initialize(&(_lcd->lcd_rw));
   772   00146E  506B               	movf	lcd_8bit_initialize@_lcd^0,w,c
   773   001470  0F02               	addlw	2
   774   001472  6E63               	movwf	gpio_pin_initialize@_pin_config^0,c
   775   001474  EC04  F00C         	call	_gpio_pin_initialize	;wreg free
   776   001478  6E6E               	movwf	lcd_8bit_initialize@ret^0,c
   777                           
   778                           ;ECU_Layer/LCD/ECU_LCD.c: 274:         ret = gpio_pin_initialize(&(_lcd->lcd_en));
   779   00147A  286B               	incf	lcd_8bit_initialize@_lcd^0,w,c
   780   00147C  6E63               	movwf	gpio_pin_initialize@_pin_config^0,c
   781   00147E  EC04  F00C         	call	_gpio_pin_initialize	;wreg free
   782   001482  6E6E               	movwf	lcd_8bit_initialize@ret^0,c
   783   001484                     
   784                           ;ECU_Layer/LCD/ECU_LCD.c: 276:         for(counter = 0; counter < 0x08U; counter++)
   785   001484  0E00               	movlw	0
   786   001486  6E6D               	movwf	lcd_8bit_initialize@counter^0,c
   787   001488                     l2452:
   788   001488  506B               	movf	lcd_8bit_initialize@_lcd^0,w,c
   789   00148A  246D               	addwf	lcd_8bit_initialize@counter^0,w,c
   790   00148C  0F03               	addlw	3
   791   00148E  6E63               	movwf	gpio_pin_initialize@_pin_config^0,c
   792   001490  EC04  F00C         	call	_gpio_pin_initialize	;wreg free
   793   001494                     
   794                           ;ECU_Layer/LCD/ECU_LCD.c: 279:         }
   795   001494  2A6D               	incf	lcd_8bit_initialize@counter^0,f,c
   796   001496  0E07               	movlw	7
   797   001498  646D               	cpfsgt	lcd_8bit_initialize@counter^0,c
   798   00149A  EF51  F00A         	goto	u1481
   799   00149E  EF53  F00A         	goto	u1480
   800   0014A2                     u1481:
   801   0014A2  EF44  F00A         	goto	l2452
   802   0014A6                     u1480:
   803   0014A6                     
   804                           ;ECU_Layer/LCD/ECU_LCD.c: 281:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
   805   0014A6  0E1A               	movlw	26
   806   0014A8  6E6C               	movwf	??_lcd_8bit_initialize^0,c
   807   0014AA  0EF8               	movlw	248
   808   0014AC                     u2247:
   809   0014AC  2EE8               	decfsz	wreg,f,c
   810   0014AE  D7FE               	bra	u2247
   811   0014B0  2E6C               	decfsz	??_lcd_8bit_initialize^0,f,c
   812   0014B2  D7FC               	bra	u2247
   813   0014B4  D000               	nop2	
   814   0014B6  C06B  F065         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
   815   0014BA  0E38               	movlw	56
   816   0014BC  6E66               	movwf	lcd_8bit_send_command@_command^0,c
   817   0014BE  EC04  F00B         	call	_lcd_8bit_send_command	;wreg free
   818   0014C2                     
   819                           ;ECU_Layer/LCD/ECU_LCD.c: 283:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
   820   0014C2  0E07               	movlw	7
   821   0014C4  6E6C               	movwf	??_lcd_8bit_initialize^0,c
   822   0014C6  0E7D               	movlw	125
   823   0014C8                     u2257:
   824   0014C8  2EE8               	decfsz	wreg,f,c
   825   0014CA  D7FE               	bra	u2257
   826   0014CC  2E6C               	decfsz	??_lcd_8bit_initialize^0,f,c
   827   0014CE  D7FC               	bra	u2257
   828   0014D0  0000               	nop	
   829   0014D2  C06B  F065         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
   830   0014D6  0E38               	movlw	56
   831   0014D8  6E66               	movwf	lcd_8bit_send_command@_command^0,c
   832   0014DA  EC04  F00B         	call	_lcd_8bit_send_command	;wreg free
   833   0014DE                     
   834                           ;ECU_Layer/LCD/ECU_LCD.c: 285:         _delay((unsigned long)((150)*(4000000UL/4000000.0
      +                          )));
   835   0014DE  0E32               	movlw	50
   836   0014E0                     u2267:
   837   0014E0  2EE8               	decfsz	wreg,f,c
   838   0014E2  D7FE               	bra	u2267
   839   0014E4  C06B  F065         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
   840   0014E8  0E38               	movlw	56
   841   0014EA  6E66               	movwf	lcd_8bit_send_command@_command^0,c
   842   0014EC  EC04  F00B         	call	_lcd_8bit_send_command	;wreg free
   843   0014F0  C06B  F065         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
   844   0014F4  0E01               	movlw	1
   845   0014F6  6E66               	movwf	lcd_8bit_send_command@_command^0,c
   846   0014F8  EC04  F00B         	call	_lcd_8bit_send_command	;wreg free
   847   0014FC                     
   848                           ;ECU_Layer/LCD/ECU_LCD.c: 289:         _delay((unsigned long)((2)*(4000000UL/4000.0)));
   849   0014FC  0E03               	movlw	3
   850   0014FE  6E6C               	movwf	??_lcd_8bit_initialize^0,c
   851   001500  0E98               	movlw	152
   852   001502                     u2277:
   853   001502  2EE8               	decfsz	wreg,f,c
   854   001504  D7FE               	bra	u2277
   855   001506  2E6C               	decfsz	??_lcd_8bit_initialize^0,f,c
   856   001508  D7FC               	bra	u2277
   857   00150A  C06B  F065         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
   858   00150E  0E02               	movlw	2
   859   001510  6E66               	movwf	lcd_8bit_send_command@_command^0,c
   860   001512  EC04  F00B         	call	_lcd_8bit_send_command	;wreg free
   861   001516                     
   862                           ;ECU_Layer/LCD/ECU_LCD.c: 291:         _delay((unsigned long)((2)*(4000000UL/4000.0)));
   863   001516  0E03               	movlw	3
   864   001518  6E6C               	movwf	??_lcd_8bit_initialize^0,c
   865   00151A  0E98               	movlw	152
   866   00151C                     u2287:
   867   00151C  2EE8               	decfsz	wreg,f,c
   868   00151E  D7FE               	bra	u2287
   869   001520  2E6C               	decfsz	??_lcd_8bit_initialize^0,f,c
   870   001522  D7FC               	bra	u2287
   871   001524  C06B  F065         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
   872   001528  0E0D               	movlw	13
   873   00152A  6E66               	movwf	lcd_8bit_send_command@_command^0,c
   874   00152C  EC04  F00B         	call	_lcd_8bit_send_command	;wreg free
   875                           
   876                           ;ECU_Layer/LCD/ECU_LCD.c: 293:         _delay((unsigned long)((19)*(4000000UL/4000000.0)
      +                          ));
   877   001530  0E06               	movlw	6
   878   001532                     u2297:
   879   001532  2EE8               	decfsz	wreg,f,c
   880   001534  D7FE               	bra	u2297
   881   001536  0000               	nop	
   882   001538  C06B  F065         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
   883   00153C  0E06               	movlw	6
   884   00153E  6E66               	movwf	lcd_8bit_send_command@_command^0,c
   885   001540  EC04  F00B         	call	_lcd_8bit_send_command	;wreg free
   886   001544                     
   887                           ;ECU_Layer/LCD/ECU_LCD.c: 295:         _delay((unsigned long)((39)*(4000000UL/4000000.0)
      +                          ));
   888   001544  0E0D               	movlw	13
   889   001546                     u2307:
   890   001546  2EE8               	decfsz	wreg,f,c
   891   001548  D7FE               	bra	u2307
   892                           
   893                           ;ECU_Layer/LCD/ECU_LCD.c: 296:         ret = lcd_8bit_send_command(_lcd, 0x30|0x28|0x20)
      +                          ;
   894   00154A  C06B  F065         	movff	lcd_8bit_initialize@_lcd,lcd_8bit_send_command@_lcd
   895   00154E  0E38               	movlw	56
   896   001550  6E66               	movwf	lcd_8bit_send_command@_command^0,c
   897   001552  EC04  F00B         	call	_lcd_8bit_send_command	;wreg free
   898   001556  6E6E               	movwf	lcd_8bit_initialize@ret^0,c
   899                           
   900                           ;ECU_Layer/LCD/ECU_LCD.c: 297:     }
   901   001558  EFB0  F00A         	goto	l229
   902   00155C                     l2480:
   903                           
   904                           ;ECU_Layer/LCD/ECU_LCD.c: 299:     {;ECU_Layer/LCD/ECU_LCD.c: 300:         ret = (Std_Re
      +                          turnType)0x00;
   905   00155C  0E00               	movlw	0
   906   00155E  6E6E               	movwf	lcd_8bit_initialize@ret^0,c
   907   001560                     l229:
   908                           
   909                           ;ECU_Layer/LCD/ECU_LCD.c: 302:     return ret;
   910   001560  506E               	movf	lcd_8bit_initialize@ret^0,w,c
   911   001562  0012               	return		;funcret
   912   001564                     __end_of_lcd_8bit_initialize:
   913                           	callstack 0
   914                           
   915 ;; *************** function _lcd_8bit_send_command *****************
   916 ;; Defined at:
   917 ;;		line 316 in file "ECU_Layer/LCD/ECU_LCD.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  _lcd            1   10[COMRAM] PTR const struct .
   920 ;;		 -> calc_v1(20), 
   921 ;;  _command        1   11[COMRAM] unsigned char 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  counter         1   15[COMRAM] unsigned char 
   924 ;;  ret             1   14[COMRAM] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      unsigned char 
   927 ;; Registers used:
   928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;Total ram usage:        6 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; Hardware stack levels required when called: 2
   941 ;; This function calls:
   942 ;;		_gpio_pin_write_logic
   943 ;;		_lcd_send_8bit_enable
   944 ;; This function is called by:
   945 ;;		_lcd_8bit_initialize
   946 ;;		_lcd_8bit_send_custome_char
   947 ;;		_lcd_8bit_set_curser
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text4
   952   001608                     __ptext4:
   953                           	callstack 0
   954   001608                     _lcd_8bit_send_command:
   955                           	callstack 25
   956   001608                     
   957                           ;ECU_Layer/LCD/ECU_LCD.c: 319:     uint8 counter = 0;
   958   001608  0E00               	movlw	0
   959   00160A  6E6A               	movwf	lcd_8bit_send_command@counter^0,c
   960                           
   961                           ;ECU_Layer/LCD/ECU_LCD.c: 321:     if(_lcd != ((void*)0))
   962   00160C  5065               	movf	lcd_8bit_send_command@_lcd^0,w,c
   963   00160E  B4D8               	btfsc	status,2,c
   964   001610  EF0C  F00B         	goto	u1371
   965   001614  EF0E  F00B         	goto	u1370
   966   001618                     u1371:
   967   001618  EF3B  F00B         	goto	l2396
   968   00161C                     u1370:
   969   00161C  C065  F05B         	movff	lcd_8bit_send_command@_lcd,gpio_pin_write_logic@_pin_config
   970   001620  0E00               	movlw	0
   971   001622  6E5C               	movwf	gpio_pin_write_logic@_logic^0,c
   972   001624  EC94  F009         	call	_gpio_pin_write_logic	;wreg free
   973   001628                     
   974                           ;ECU_Layer/LCD/ECU_LCD.c: 324:         for(counter = 0; counter < 0x08U; counter++)
   975   001628  0E00               	movlw	0
   976   00162A  6E6A               	movwf	lcd_8bit_send_command@counter^0,c
   977   00162C                     l2388:
   978   00162C  5065               	movf	lcd_8bit_send_command@_lcd^0,w,c
   979   00162E  246A               	addwf	lcd_8bit_send_command@counter^0,w,c
   980   001630  0F03               	addlw	3
   981   001632  6E5B               	movwf	gpio_pin_write_logic@_pin_config^0,c
   982   001634  C06A  F067         	movff	lcd_8bit_send_command@counter,??_lcd_8bit_send_command
   983   001638  C066  F068         	movff	lcd_8bit_send_command@_command,??_lcd_8bit_send_command+1
   984   00163C  2A67               	incf	??_lcd_8bit_send_command^0,f,c
   985   00163E  EF23  F00B         	goto	u1384
   986   001642                     u1385:
   987   001642  90D8               	bcf	status,0,c
   988   001644  3268               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
   989   001646                     u1384:
   990   001646  2E67               	decfsz	??_lcd_8bit_send_command^0,f,c
   991   001648  EF21  F00B         	goto	u1385
   992   00164C  5068               	movf	(??_lcd_8bit_send_command+1)^0,w,c
   993   00164E  0B01               	andlw	1
   994   001650  6E5C               	movwf	gpio_pin_write_logic@_logic^0,c
   995   001652  EC94  F009         	call	_gpio_pin_write_logic	;wreg free
   996   001656                     
   997                           ;ECU_Layer/LCD/ECU_LCD.c: 327:         }
   998   001656  2A6A               	incf	lcd_8bit_send_command@counter^0,f,c
   999   001658  0E07               	movlw	7
  1000   00165A  646A               	cpfsgt	lcd_8bit_send_command@counter^0,c
  1001   00165C  EF32  F00B         	goto	u1391
  1002   001660  EF34  F00B         	goto	u1390
  1003   001664                     u1391:
  1004   001664  EF16  F00B         	goto	l2388
  1005   001668                     u1390:
  1006   001668                     
  1007                           ;ECU_Layer/LCD/ECU_LCD.c: 329:         ret = lcd_send_8bit_enable(_lcd);
  1008   001668  C065  F063         	movff	lcd_8bit_send_command@_lcd,lcd_send_8bit_enable@_lcd
  1009   00166C  EC40  F00C         	call	_lcd_send_8bit_enable	;wreg free
  1010   001670  6E69               	movwf	lcd_8bit_send_command@ret^0,c
  1011                           
  1012                           ;ECU_Layer/LCD/ECU_LCD.c: 330:     }
  1013   001672  EF3D  F00B         	goto	l236
  1014   001676                     l2396:
  1015                           
  1016                           ;ECU_Layer/LCD/ECU_LCD.c: 332:     {;ECU_Layer/LCD/ECU_LCD.c: 333:         ret = (Std_Re
      +                          turnType)0x00;
  1017   001676  0E00               	movlw	0
  1018   001678  6E69               	movwf	lcd_8bit_send_command@ret^0,c
  1019   00167A                     l236:
  1020                           
  1021                           ;ECU_Layer/LCD/ECU_LCD.c: 335:     return ret;
  1022   00167A  5069               	movf	lcd_8bit_send_command@ret^0,w,c
  1023   00167C  0012               	return		;funcret
  1024   00167E                     __end_of_lcd_8bit_send_command:
  1025                           	callstack 0
  1026                           
  1027 ;; *************** function _keypad_initialize *****************
  1028 ;; Defined at:
  1029 ;;		line 22 in file "ECU_Layer/Keypad/ECU_keypad.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  _keypad         1   10[COMRAM] PTR const struct .
  1032 ;;		 -> calc_v1(20), 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  counter         1   12[COMRAM] unsigned char 
  1035 ;;  ret             1   11[COMRAM] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      unsigned char 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1045 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;Total ram usage:        3 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 2
  1052 ;; This function calls:
  1053 ;;		_gpio_pin_direction_initialize
  1054 ;;		_gpio_pin_initialize
  1055 ;; This function is called by:
  1056 ;;		_calculator_initialize
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text5
  1061   0016F4                     __ptext5:
  1062                           	callstack 0
  1063   0016F4                     _keypad_initialize:
  1064                           	callstack 26
  1065   0016F4                     
  1066                           ;ECU_Layer/Keypad/ECU_keypad.c: 25:     uint8 counter = 0;
  1067   0016F4  0E00               	movlw	0
  1068   0016F6  6E67               	movwf	keypad_initialize@counter^0,c
  1069                           
  1070                           ;ECU_Layer/Keypad/ECU_keypad.c: 26:     if(_keypad != ((void*)0))
  1071   0016F8  5065               	movf	keypad_initialize@_keypad^0,w,c
  1072   0016FA  B4D8               	btfsc	status,2,c
  1073   0016FC  EF82  F00B         	goto	u1441
  1074   001700  EF84  F00B         	goto	u1440
  1075   001704                     u1441:
  1076   001704  EFA8  F00B         	goto	l2438
  1077   001708                     u1440:
  1078   001708                     
  1079                           ;ECU_Layer/Keypad/ECU_keypad.c: 27:     {;ECU_Layer/Keypad/ECU_keypad.c: 29:         for
      +                          (counter = 0; counter < 4; counter++)
  1080   001708  0E00               	movlw	0
  1081   00170A  6E67               	movwf	keypad_initialize@counter^0,c
  1082   00170C                     l2420:
  1083   00170C  5065               	movf	keypad_initialize@_keypad^0,w,c
  1084   00170E  2467               	addwf	keypad_initialize@counter^0,w,c
  1085   001710  6E63               	movwf	gpio_pin_initialize@_pin_config^0,c
  1086   001712  EC04  F00C         	call	_gpio_pin_initialize	;wreg free
  1087   001716                     
  1088                           ;ECU_Layer/Keypad/ECU_keypad.c: 32:         }
  1089   001716  2A67               	incf	keypad_initialize@counter^0,f,c
  1090   001718  0E03               	movlw	3
  1091   00171A  6467               	cpfsgt	keypad_initialize@counter^0,c
  1092   00171C  EF92  F00B         	goto	u1451
  1093   001720  EF94  F00B         	goto	u1450
  1094   001724                     u1451:
  1095   001724  EF86  F00B         	goto	l2420
  1096   001728                     u1450:
  1097   001728                     
  1098                           ;ECU_Layer/Keypad/ECU_keypad.c: 34:         for(counter = 0; counter < 4; counter++)
  1099   001728  0E00               	movlw	0
  1100   00172A  6E67               	movwf	keypad_initialize@counter^0,c
  1101   00172C                     l2432:
  1102                           
  1103                           ;ECU_Layer/Keypad/ECU_keypad.c: 35:         {;ECU_Layer/Keypad/ECU_keypad.c: 36:        
      +                               ret = gpio_pin_direction_initialize(&(_keypad->keypad_columns[counter]));
  1104   00172C  5065               	movf	keypad_initialize@_keypad^0,w,c
  1105   00172E  2467               	addwf	keypad_initialize@counter^0,w,c
  1106   001730  0F04               	addlw	4
  1107   001732  6E5B               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  1108   001734  ECFD  F008         	call	_gpio_pin_direction_initialize	;wreg free
  1109   001738  6E66               	movwf	keypad_initialize@ret^0,c
  1110   00173A                     
  1111                           ;ECU_Layer/Keypad/ECU_keypad.c: 37:         }
  1112   00173A  2A67               	incf	keypad_initialize@counter^0,f,c
  1113   00173C  0E03               	movlw	3
  1114   00173E  6467               	cpfsgt	keypad_initialize@counter^0,c
  1115   001740  EFA4  F00B         	goto	u1461
  1116   001744  EFA6  F00B         	goto	u1460
  1117   001748                     u1461:
  1118   001748  EF96  F00B         	goto	l2432
  1119   00174C                     u1460:
  1120   00174C  EFAA  F00B         	goto	l132
  1121   001750                     l2438:
  1122                           
  1123                           ;ECU_Layer/Keypad/ECU_keypad.c: 41:     {;ECU_Layer/Keypad/ECU_keypad.c: 42:         ret
      +                           = (Std_ReturnType)0x00;
  1124   001750  0E00               	movlw	0
  1125   001752  6E66               	movwf	keypad_initialize@ret^0,c
  1126   001754                     l132:
  1127                           
  1128                           ;ECU_Layer/Keypad/ECU_keypad.c: 44:     return ret;
  1129   001754  5066               	movf	keypad_initialize@ret^0,w,c
  1130   001756  0012               	return		;funcret
  1131   001758                     __end_of_keypad_initialize:
  1132                           	callstack 0
  1133                           
  1134 ;; *************** function _gpio_pin_initialize *****************
  1135 ;; Defined at:
  1136 ;;		line 175 in file "MCAL_Layer/GPIO/HAL_GPIO.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  1139 ;;		 -> calc_v1$lcd_pins(8), calc_v1$keypad_rows(4), calc_v1(20), relay_initialize@relay_pin(1), 
  1140 ;;		 -> led_initialize@pin(1), 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  Status          1    9[COMRAM] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      unsigned char 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1152 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;Total ram usage:        2 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; Hardware stack levels required when called: 1
  1159 ;; This function calls:
  1160 ;;		_gpio_pin_direction_initialize
  1161 ;;		_gpio_pin_write_logic
  1162 ;; This function is called by:
  1163 ;;		_keypad_initialize
  1164 ;;		_lcd_8bit_initialize
  1165 ;;		_dc_motor_initialize
  1166 ;;		_lcd_4bit_initialize
  1167 ;;		_led_initialize
  1168 ;;		_relay_initialize
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text6
  1173   001808                     __ptext6:
  1174                           	callstack 0
  1175   001808                     _gpio_pin_initialize:
  1176                           	callstack 26
  1177   001808                     
  1178                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 175: Std_ReturnType gpio_pin_initialize(const pin_config_t 
      +                          *_pin_config);MCAL_Layer/GPIO/HAL_GPIO.c: 176: {;MCAL_Layer/GPIO/HAL_GPIO.c: 177:     St
      +                          d_ReturnType Status = (Std_ReturnType)0x01;
  1179   001808  0E01               	movlw	1
  1180   00180A  6E64               	movwf	gpio_pin_initialize@Status^0,c
  1181                           
  1182                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 178:     if(_pin_config != ((void*)0))
  1183   00180C  5063               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1184   00180E  B4D8               	btfsc	status,2,c
  1185   001810  EF0C  F00C         	goto	u1361
  1186   001814  EF0E  F00C         	goto	u1360
  1187   001818                     u1361:
  1188   001818  EF1F  F00C         	goto	l2374
  1189   00181C                     u1360:
  1190   00181C                     
  1191                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 179:     {;MCAL_Layer/GPIO/HAL_GPIO.c: 180:         gpio_pi
      +                          n_direction_initialize(_pin_config);
  1192   00181C  C063  F05B         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  1193   001820  ECFD  F008         	call	_gpio_pin_direction_initialize	;wreg free
  1194                           
  1195                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 181:         gpio_pin_write_logic(_pin_config,(_pin_config-
      +                          >logic));
  1196   001824  C063  F05B         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  1197   001828  5063               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1198   00182A  6ED9               	movwf	fsr2l,c
  1199   00182C  6ADA               	clrf	fsr2h,c
  1200   00182E  0E00               	movlw	0
  1201   001830  BEDF               	btfsc	indf2,7,c
  1202   001832  0E01               	movlw	1
  1203   001834  6E5C               	movwf	gpio_pin_write_logic@_logic^0,c
  1204   001836  EC94  F009         	call	_gpio_pin_write_logic	;wreg free
  1205                           
  1206                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 182:     }
  1207   00183A  EF21  F00C         	goto	l492
  1208   00183E                     l2374:
  1209                           
  1210                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 184:     {;MCAL_Layer/GPIO/HAL_GPIO.c: 185:         Status 
      +                          = (Std_ReturnType)0x00;
  1211   00183E  0E00               	movlw	0
  1212   001840  6E64               	movwf	gpio_pin_initialize@Status^0,c
  1213   001842                     l492:
  1214                           
  1215                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 187:     return Status;
  1216   001842  5064               	movf	gpio_pin_initialize@Status^0,w,c
  1217   001844  0012               	return		;funcret
  1218   001846                     __end_of_gpio_pin_initialize:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _gpio_pin_direction_initialize *****************
  1222 ;; Defined at:
  1223 ;;		line 24 in file "MCAL_Layer/GPIO/HAL_GPIO.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1226 ;;		 -> calc_v1$lcd_pins(8), calc_v1$keypad_columns(4), calc_v1$keypad_rows(4), calc_v1(20), 
  1227 ;;		 -> relay_initialize@relay_pin(1), led_initialize@pin(1), 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  Status          1    6[COMRAM] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      unsigned char 
  1232 ;; Registers used:
  1233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1239 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;Total ram usage:        7 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_keypad_initialize
  1249 ;;		_gpio_pin_initialize
  1250 ;;		_button_initialize
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text7
  1255   0011FA                     __ptext7:
  1256                           	callstack 0
  1257   0011FA                     _gpio_pin_direction_initialize:
  1258                           	callstack 26
  1259   0011FA                     
  1260                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 24: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t *_pin_config);MCAL_Layer/GPIO/HAL_GPIO.c: 25: {;MCAL_Layer/GPIO/HAL_GPIO.c: 26:
      +                               Std_ReturnType Status = (Std_ReturnType)0x01;
  1261   0011FA  0E01               	movlw	1
  1262   0011FC  6E61               	movwf	gpio_pin_direction_initialize@Status^0,c
  1263                           
  1264                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 28:     if(_pin_config == ((void*)0) || ((_pin_config->pin)
      +                           > (8 -1)) || ((_pin_config->port) > (5 -1)) )
  1265   0011FE  505B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1266   001200  B4D8               	btfsc	status,2,c
  1267   001202  EF05  F009         	goto	u1291
  1268   001206  EF07  F009         	goto	u1290
  1269   00120A                     u1291:
  1270   00120A  EF25  F009         	goto	l2344
  1271   00120E                     u1290:
  1272   00120E  505B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1273   001210  6ED9               	movwf	fsr2l,c
  1274   001212  6ADA               	clrf	fsr2h,c
  1275   001214  30DF               	rrcf	223,w,c
  1276   001216  32E8               	rrcf	wreg,f,c
  1277   001218  32E8               	rrcf	wreg,f,c
  1278   00121A  0B07               	andlw	7
  1279   00121C  6E5C               	movwf	??_gpio_pin_direction_initialize^0,c
  1280   00121E  0E08               	movlw	8
  1281   001220  605C               	cpfslt	??_gpio_pin_direction_initialize^0,c
  1282   001222  EF15  F009         	goto	u1301
  1283   001226  EF17  F009         	goto	u1300
  1284   00122A                     u1301:
  1285   00122A  EF25  F009         	goto	l2344
  1286   00122E                     u1300:
  1287   00122E  505B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1288   001230  6ED9               	movwf	fsr2l,c
  1289   001232  6ADA               	clrf	fsr2h,c
  1290   001234  50DF               	movf	223,w,c
  1291   001236  0B07               	andlw	7
  1292   001238  6E5C               	movwf	??_gpio_pin_direction_initialize^0,c
  1293   00123A  0E04               	movlw	4
  1294   00123C  645C               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1295   00123E  EF23  F009         	goto	u1311
  1296   001242  EF25  F009         	goto	u1310
  1297   001246                     u1311:
  1298   001246  EF7C  F009         	goto	l2354
  1299   00124A                     u1310:
  1300   00124A                     l2344:
  1301                           
  1302                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 29:     {;MCAL_Layer/GPIO/HAL_GPIO.c: 30:         Status = 
      +                          (Std_ReturnType)0x00;
  1303   00124A  0E00               	movlw	0
  1304   00124C  6E61               	movwf	gpio_pin_direction_initialize@Status^0,c
  1305                           
  1306                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 31:     }
  1307   00124E  EF92  F009         	goto	l2356
  1308   001252                     l2346:
  1309                           
  1310                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 38:                 ((*tris_reg[_pin_config->port] &= ~(((u
      +                          int8) 1 ) <<_pin_config->pin)));
  1311   001252  505B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1312   001254  6ED9               	movwf	fsr2l,c
  1313   001256  6ADA               	clrf	fsr2h,c
  1314   001258  30DF               	rrcf	223,w,c
  1315   00125A  32E8               	rrcf	wreg,f,c
  1316   00125C  32E8               	rrcf	wreg,f,c
  1317   00125E  0B07               	andlw	7
  1318   001260  6E5C               	movwf	??_gpio_pin_direction_initialize^0,c
  1319   001262  0E01               	movlw	1
  1320   001264  6E5D               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1321   001266  2A5C               	incf	??_gpio_pin_direction_initialize^0,f,c
  1322   001268  EF38  F009         	goto	u1324
  1323   00126C                     u1325:
  1324   00126C  90D8               	bcf	status,0,c
  1325   00126E  365D               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1326   001270                     u1324:
  1327   001270  2E5C               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1328   001272  EF36  F009         	goto	u1325
  1329   001276  505D               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1330   001278  0AFF               	xorlw	255
  1331   00127A  6E5E               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1332   00127C  505B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1333   00127E  6ED9               	movwf	fsr2l,c
  1334   001280  6ADA               	clrf	fsr2h,c
  1335   001282  50DF               	movf	223,w,c
  1336   001284  0B07               	andlw	7
  1337   001286  0D02               	mullw	2
  1338   001288  50F3               	movf	243,w,c
  1339   00128A  0F15               	addlw	low _tris_reg
  1340   00128C  6ED9               	movwf	fsr2l,c
  1341   00128E  6ADA               	clrf	fsr2h,c
  1342   001290  CFDE F05F          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1343   001294  CFDD F060          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1344   001298  C05F  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1345   00129C  C060  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1346   0012A0  505E               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1347   0012A2  16DF               	andwf	indf2,f,c
  1348                           
  1349                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 39:                 break;
  1350   0012A4  EF92  F009         	goto	l2356
  1351   0012A8                     l2348:
  1352                           
  1353                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 41:                 ((*tris_reg[_pin_config->port] |=(((uin
      +                          t8) 1 ) <<_pin_config->pin)));
  1354   0012A8  505B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1355   0012AA  6ED9               	movwf	fsr2l,c
  1356   0012AC  6ADA               	clrf	fsr2h,c
  1357   0012AE  30DF               	rrcf	223,w,c
  1358   0012B0  32E8               	rrcf	wreg,f,c
  1359   0012B2  32E8               	rrcf	wreg,f,c
  1360   0012B4  0B07               	andlw	7
  1361   0012B6  6E5C               	movwf	??_gpio_pin_direction_initialize^0,c
  1362   0012B8  0E01               	movlw	1
  1363   0012BA  6E5D               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1364   0012BC  2A5C               	incf	??_gpio_pin_direction_initialize^0,f,c
  1365   0012BE  EF63  F009         	goto	u1334
  1366   0012C2                     u1335:
  1367   0012C2  90D8               	bcf	status,0,c
  1368   0012C4  365D               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1369   0012C6                     u1334:
  1370   0012C6  2E5C               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1371   0012C8  EF61  F009         	goto	u1335
  1372   0012CC  505B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1373   0012CE  6ED9               	movwf	fsr2l,c
  1374   0012D0  6ADA               	clrf	fsr2h,c
  1375   0012D2  50DF               	movf	223,w,c
  1376   0012D4  0B07               	andlw	7
  1377   0012D6  0D02               	mullw	2
  1378   0012D8  50F3               	movf	243,w,c
  1379   0012DA  0F15               	addlw	low _tris_reg
  1380   0012DC  6ED9               	movwf	fsr2l,c
  1381   0012DE  6ADA               	clrf	fsr2h,c
  1382   0012E0  CFDE F05E          	movff	postinc2,??_gpio_pin_direction_initialize+2
  1383   0012E4  CFDD F05F          	movff	postdec2,??_gpio_pin_direction_initialize+3
  1384   0012E8  C05E  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  1385   0012EC  C05F  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  1386   0012F0  505D               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1387   0012F2  12DF               	iorwf	indf2,f,c
  1388                           
  1389                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 42:                 break;
  1390   0012F4  EF92  F009         	goto	l2356
  1391   0012F8                     l2354:
  1392   0012F8  505B               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1393   0012FA  6ED9               	movwf	fsr2l,c
  1394   0012FC  6ADA               	clrf	fsr2h,c
  1395   0012FE  BCDF               	btfsc	indf2,6,c
  1396   001300  EF84  F009         	goto	u1341
  1397   001304  EF87  F009         	goto	u1340
  1398   001308                     u1341:
  1399   001308  0E01               	movlw	1
  1400   00130A  EF88  F009         	goto	u1346
  1401   00130E                     u1340:
  1402   00130E  0E00               	movlw	0
  1403   001310                     u1346:
  1404                           
  1405                           ; Switch size 1, requested type "simple"
  1406                           ; Number of cases is 2, Range of values is 0 to 1
  1407                           ; switch strategies available:
  1408                           ; Name         Instructions Cycles
  1409                           ; simple_byte            7     4 (average)
  1410                           ;	Chosen strategy is simple_byte
  1411   001310  0A00               	xorlw	0	; case 0
  1412   001312  B4D8               	btfsc	status,2,c
  1413   001314  EF29  F009         	goto	l2346
  1414   001318  0A01               	xorlw	1	; case 1
  1415   00131A  B4D8               	btfsc	status,2,c
  1416   00131C  EF54  F009         	goto	l2348
  1417   001320  EF25  F009         	goto	l2344
  1418   001324                     l2356:
  1419                           
  1420                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 48:     return Status;
  1421   001324  5061               	movf	gpio_pin_direction_initialize@Status^0,w,c
  1422   001326  0012               	return		;funcret
  1423   001328                     __end_of_gpio_pin_direction_initialize:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _calculator_get_key *****************
  1427 ;; Defined at:
  1428 ;;		line 30 in file "Projects/project1_calc/calc.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  _calc           1   18[COMRAM] PTR const struct .
  1431 ;;		 -> calc_v1(20), 
  1432 ;;  _value          1   19[COMRAM] PTR unsigned char 
  1433 ;;		 -> value(1), 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  ret             1   20[COMRAM] unsigned char 
  1436 ;;  value           1    0        unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      unsigned char 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;Total ram usage:        3 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 3
  1453 ;; This function calls:
  1454 ;;		_keypad_get_value
  1455 ;;		_lcd_8bit_send_data
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text8
  1462   001846                     __ptext8:
  1463                           	callstack 0
  1464   001846                     _calculator_get_key:
  1465                           	callstack 27
  1466   001846                     
  1467                           ;Projects/project1_calc/calc.c: 33:     uint8 value;;Projects/project1_calc/calc.c: 34: 
      +                              if(_calc != ((void*)0))
  1468   001846  506D               	movf	calculator_get_key@_calc^0,w,c
  1469   001848  B4D8               	btfsc	status,2,c
  1470   00184A  EF29  F00C         	goto	u1801
  1471   00184E  EF2B  F00C         	goto	u1800
  1472   001852                     u1801:
  1473   001852  EF3F  F00C         	goto	l2732
  1474   001856                     u1800:
  1475   001856                     
  1476                           ;Projects/project1_calc/calc.c: 35:     {;Projects/project1_calc/calc.c: 36:         ret
      +                           = keypad_get_value(&(_calc->keypad), _value);
  1477   001856  C06D  F063         	movff	calculator_get_key@_calc,keypad_get_value@_keypad
  1478   00185A  C06E  F064         	movff	calculator_get_key@_value,keypad_get_value@_value
  1479   00185E  EC01  F008         	call	_keypad_get_value	;wreg free
  1480   001862  6E6F               	movwf	calculator_get_key@ret^0,c
  1481   001864                     
  1482                           ;Projects/project1_calc/calc.c: 37:         ret &= lcd_8bit_send_data(&(_calc->lcd),*_va
      +                          lue);
  1483   001864  506D               	movf	calculator_get_key@_calc^0,w,c
  1484   001866  0F09               	addlw	9
  1485   001868  6E65               	movwf	lcd_8bit_send_data@_lcd^0,c
  1486   00186A  506E               	movf	calculator_get_key@_value^0,w,c
  1487   00186C  6ED9               	movwf	fsr2l,c
  1488   00186E  6ADA               	clrf	fsr2h,c
  1489   001870  50DF               	movf	indf2,w,c
  1490   001872  6E66               	movwf	lcd_8bit_send_data@_data^0,c
  1491   001874  EC3F  F00B         	call	_lcd_8bit_send_data	;wreg free
  1492   001878  166F               	andwf	calculator_get_key@ret^0,f,c
  1493                           
  1494                           ;Projects/project1_calc/calc.c: 38:     }
  1495   00187A  EF3F  F00C         	goto	l568
  1496   00187E                     l2732:
  1497   00187E                     l568:
  1498   00187E  0012               	return		;funcret
  1499   001880                     __end_of_calculator_get_key:
  1500                           	callstack 0
  1501                           
  1502 ;; *************** function _lcd_8bit_send_data *****************
  1503 ;; Defined at:
  1504 ;;		line 349 in file "ECU_Layer/LCD/ECU_LCD.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  _lcd            1   10[COMRAM] PTR const struct .
  1507 ;;		 -> calc_v1(20), 
  1508 ;;  _data           1   11[COMRAM] unsigned char 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  counter         1   15[COMRAM] unsigned char 
  1511 ;;  ret             1   14[COMRAM] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      unsigned char 
  1514 ;; Registers used:
  1515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;Total ram usage:        6 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 2
  1528 ;; This function calls:
  1529 ;;		_gpio_pin_write_logic
  1530 ;;		_lcd_send_8bit_enable
  1531 ;; This function is called by:
  1532 ;;		_calculator_get_key
  1533 ;;		_lcd_8bit_send_data_pos
  1534 ;;		_lcd_8bit_send_string
  1535 ;;		_lcd_8bit_send_custome_char
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text9
  1540   00167E                     __ptext9:
  1541                           	callstack 0
  1542   00167E                     _lcd_8bit_send_data:
  1543                           	callstack 27
  1544   00167E                     
  1545                           ;ECU_Layer/LCD/ECU_LCD.c: 352:     uint8 counter = 0;
  1546   00167E  0E00               	movlw	0
  1547   001680  6E6A               	movwf	lcd_8bit_send_data@counter^0,c
  1548                           
  1549                           ;ECU_Layer/LCD/ECU_LCD.c: 353:     if(_lcd != ((void*)0))
  1550   001682  5065               	movf	lcd_8bit_send_data@_lcd^0,w,c
  1551   001684  B4D8               	btfsc	status,2,c
  1552   001686  EF47  F00B         	goto	u1641
  1553   00168A  EF49  F00B         	goto	u1640
  1554   00168E                     u1641:
  1555   00168E  EF76  F00B         	goto	l2616
  1556   001692                     u1640:
  1557   001692  C065  F05B         	movff	lcd_8bit_send_data@_lcd,gpio_pin_write_logic@_pin_config
  1558   001696  0E01               	movlw	1
  1559   001698  6E5C               	movwf	gpio_pin_write_logic@_logic^0,c
  1560   00169A  EC94  F009         	call	_gpio_pin_write_logic	;wreg free
  1561   00169E                     
  1562                           ;ECU_Layer/LCD/ECU_LCD.c: 356:         for(counter = 0; counter < 0x08U; counter++)
  1563   00169E  0E00               	movlw	0
  1564   0016A0  6E6A               	movwf	lcd_8bit_send_data@counter^0,c
  1565   0016A2                     l2608:
  1566   0016A2  5065               	movf	lcd_8bit_send_data@_lcd^0,w,c
  1567   0016A4  246A               	addwf	lcd_8bit_send_data@counter^0,w,c
  1568   0016A6  0F03               	addlw	3
  1569   0016A8  6E5B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1570   0016AA  C06A  F067         	movff	lcd_8bit_send_data@counter,??_lcd_8bit_send_data
  1571   0016AE  C066  F068         	movff	lcd_8bit_send_data@_data,??_lcd_8bit_send_data+1
  1572   0016B2  2A67               	incf	??_lcd_8bit_send_data^0,f,c
  1573   0016B4  EF5E  F00B         	goto	u1654
  1574   0016B8                     u1655:
  1575   0016B8  90D8               	bcf	status,0,c
  1576   0016BA  3268               	rrcf	(??_lcd_8bit_send_data+1)^0,f,c
  1577   0016BC                     u1654:
  1578   0016BC  2E67               	decfsz	??_lcd_8bit_send_data^0,f,c
  1579   0016BE  EF5C  F00B         	goto	u1655
  1580   0016C2  5068               	movf	(??_lcd_8bit_send_data+1)^0,w,c
  1581   0016C4  0B01               	andlw	1
  1582   0016C6  6E5C               	movwf	gpio_pin_write_logic@_logic^0,c
  1583   0016C8  EC94  F009         	call	_gpio_pin_write_logic	;wreg free
  1584   0016CC                     
  1585                           ;ECU_Layer/LCD/ECU_LCD.c: 359:         }
  1586   0016CC  2A6A               	incf	lcd_8bit_send_data@counter^0,f,c
  1587   0016CE  0E07               	movlw	7
  1588   0016D0  646A               	cpfsgt	lcd_8bit_send_data@counter^0,c
  1589   0016D2  EF6D  F00B         	goto	u1661
  1590   0016D6  EF6F  F00B         	goto	u1660
  1591   0016DA                     u1661:
  1592   0016DA  EF51  F00B         	goto	l2608
  1593   0016DE                     u1660:
  1594   0016DE                     
  1595                           ;ECU_Layer/LCD/ECU_LCD.c: 360:         ret = lcd_send_8bit_enable(_lcd);
  1596   0016DE  C065  F063         	movff	lcd_8bit_send_data@_lcd,lcd_send_8bit_enable@_lcd
  1597   0016E2  EC40  F00C         	call	_lcd_send_8bit_enable	;wreg free
  1598   0016E6  6E69               	movwf	lcd_8bit_send_data@ret^0,c
  1599                           
  1600                           ;ECU_Layer/LCD/ECU_LCD.c: 361:     }
  1601   0016E8  EF78  F00B         	goto	l243
  1602   0016EC                     l2616:
  1603                           
  1604                           ;ECU_Layer/LCD/ECU_LCD.c: 363:     {;ECU_Layer/LCD/ECU_LCD.c: 364:         ret = (Std_Re
      +                          turnType)0x00;
  1605   0016EC  0E00               	movlw	0
  1606   0016EE  6E69               	movwf	lcd_8bit_send_data@ret^0,c
  1607   0016F0                     l243:
  1608                           
  1609                           ;ECU_Layer/LCD/ECU_LCD.c: 366:     return ret;
  1610   0016F0  5069               	movf	lcd_8bit_send_data@ret^0,w,c
  1611   0016F2  0012               	return		;funcret
  1612   0016F4                     __end_of_lcd_8bit_send_data:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _lcd_send_8bit_enable *****************
  1616 ;; Defined at:
  1617 ;;		line 613 in file "ECU_Layer/LCD/ECU_LCD.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  _lcd            1    8[COMRAM] PTR const struct .
  1620 ;;		 -> calc_v1(20), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  ret             1    9[COMRAM] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      unsigned char 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1632 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;Total ram usage:        2 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 1
  1639 ;; This function calls:
  1640 ;;		_gpio_pin_write_logic
  1641 ;; This function is called by:
  1642 ;;		_lcd_8bit_send_command
  1643 ;;		_lcd_8bit_send_data
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text10
  1648   001880                     __ptext10:
  1649                           	callstack 0
  1650   001880                     _lcd_send_8bit_enable:
  1651                           	callstack 25
  1652   001880                     
  1653                           ;ECU_Layer/LCD/ECU_LCD.c: 616:     if(_lcd != ((void*)0))
  1654   001880  5063               	movf	lcd_send_8bit_enable@_lcd^0,w,c
  1655   001882  B4D8               	btfsc	status,2,c
  1656   001884  EF46  F00C         	goto	u1351
  1657   001888  EF48  F00C         	goto	u1350
  1658   00188C                     u1351:
  1659   00188C  EF58  F00C         	goto	l2366
  1660   001890                     u1350:
  1661   001890  2863               	incf	lcd_send_8bit_enable@_lcd^0,w,c
  1662   001892  6E5B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1663   001894  0E01               	movlw	1
  1664   001896  6E5C               	movwf	gpio_pin_write_logic@_logic^0,c
  1665   001898  EC94  F009         	call	_gpio_pin_write_logic	;wreg free
  1666   00189C                     
  1667                           ;ECU_Layer/LCD/ECU_LCD.c: 619:         _delay((unsigned long)((2)*(4000000UL/4000000.0))
      +                          );
  1668   00189C  D000               	nop2		;2 cycle nop
  1669                           
  1670                           ;ECU_Layer/LCD/ECU_LCD.c: 620:         ret = gpio_pin_write_logic(&(_lcd->lcd_en),GPIO_O
      +                          UTPUT_LOW);
  1671   00189E  2863               	incf	lcd_send_8bit_enable@_lcd^0,w,c
  1672   0018A0  6E5B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1673   0018A2  0E00               	movlw	0
  1674   0018A4  6E5C               	movwf	gpio_pin_write_logic@_logic^0,c
  1675   0018A6  EC94  F009         	call	_gpio_pin_write_logic	;wreg free
  1676   0018AA  6E64               	movwf	lcd_send_8bit_enable@ret^0,c
  1677                           
  1678                           ;ECU_Layer/LCD/ECU_LCD.c: 621:     }
  1679   0018AC  EF5A  F00C         	goto	l298
  1680   0018B0                     l2366:
  1681                           
  1682                           ;ECU_Layer/LCD/ECU_LCD.c: 623:     {;ECU_Layer/LCD/ECU_LCD.c: 624:         ret = (Std_Re
      +                          turnType)0x00;
  1683   0018B0  0E00               	movlw	0
  1684   0018B2  6E64               	movwf	lcd_send_8bit_enable@ret^0,c
  1685   0018B4                     l298:
  1686                           
  1687                           ;ECU_Layer/LCD/ECU_LCD.c: 626:     return ret;
  1688   0018B4  5064               	movf	lcd_send_8bit_enable@ret^0,w,c
  1689   0018B6  0012               	return		;funcret
  1690   0018B8                     __end_of_lcd_send_8bit_enable:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _keypad_get_value *****************
  1694 ;; Defined at:
  1695 ;;		line 61 in file "ECU_Layer/Keypad/ECU_keypad.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  _keypad         1    8[COMRAM] PTR const struct .
  1698 ;;		 -> calc_v1(20), 
  1699 ;;  _value          1    9[COMRAM] PTR unsigned char 
  1700 ;;		 -> value(1), 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  row_counter     2   16[COMRAM] unsigned short 
  1703 ;;  col_counter     2   14[COMRAM] unsigned short 
  1704 ;;  col_state       1   13[COMRAM] enum E2997
  1705 ;;  ret             1   12[COMRAM] unsigned char 
  1706 ;;  is_pressed      1   11[COMRAM] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      unsigned char 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;Total ram usage:       10 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 1
  1723 ;; This function calls:
  1724 ;;		_gpio_pin_read_logic
  1725 ;;		_gpio_pin_write_logic
  1726 ;; This function is called by:
  1727 ;;		_calculator_get_key
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text11
  1732   001002                     __ptext11:
  1733                           	callstack 0
  1734   001002                     _keypad_get_value:
  1735                           	callstack 28
  1736   001002                     
  1737                           ;ECU_Layer/Keypad/ECU_keypad.c: 61: Std_ReturnType keypad_get_value (const keypad_t *_ke
      +                          ypad,uint8 *_value);ECU_Layer/Keypad/ECU_keypad.c: 62: {;ECU_Layer/Keypad/ECU_keypad.c: 
      +                          63:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1738   001002  0E01               	movlw	1
  1739   001004  6E67               	movwf	keypad_get_value@ret^0,c
  1740                           
  1741                           ;ECU_Layer/Keypad/ECU_keypad.c: 65:     boolean is_pressed = 0;
  1742   001006  0E00               	movlw	0
  1743   001008  6E66               	movwf	keypad_get_value@is_pressed^0,c
  1744                           
  1745                           ;ECU_Layer/Keypad/ECU_keypad.c: 66:     logic_t col_state = GPIO_OUTPUT_LOW;
  1746   00100A  0E00               	movlw	0
  1747   00100C  6E68               	movwf	keypad_get_value@col_state^0,c
  1748                           
  1749                           ;ECU_Layer/Keypad/ECU_keypad.c: 68:     uint16 col_counter = 0;
  1750   00100E  0E00               	movlw	0
  1751   001010  6E6A               	movwf	(keypad_get_value@col_counter+1)^0,c
  1752   001012  0E00               	movlw	0
  1753   001014  6E69               	movwf	keypad_get_value@col_counter^0,c
  1754                           
  1755                           ;ECU_Layer/Keypad/ECU_keypad.c: 70:     if(_keypad != ((void*)0) && _value != ((void*)0)
      +                          )
  1756   001016  5063               	movf	keypad_get_value@_keypad^0,w,c
  1757   001018  B4D8               	btfsc	status,2,c
  1758   00101A  EF11  F008         	goto	u1491
  1759   00101E  EF13  F008         	goto	u1490
  1760   001022                     u1491:
  1761   001022  EFF9  F008         	goto	l2572
  1762   001026                     u1490:
  1763   001026  5064               	movf	keypad_get_value@_value^0,w,c
  1764   001028  B4D8               	btfsc	status,2,c
  1765   00102A  EF19  F008         	goto	u1501
  1766   00102E  EF1B  F008         	goto	u1500
  1767   001032                     u1501:
  1768   001032  EFF9  F008         	goto	l2572
  1769   001036                     u1500:
  1770   001036  EFEF  F008         	goto	l2570
  1771   00103A                     l2490:
  1772                           
  1773                           ;ECU_Layer/Keypad/ECU_keypad.c: 73:         {;ECU_Layer/Keypad/ECU_keypad.c: 74:        
      +                               if (_keypad->keypad_connection_type == 0)
  1774   00103A  5063               	movf	keypad_get_value@_keypad^0,w,c
  1775   00103C  6ED9               	movwf	fsr2l,c
  1776   00103E  6ADA               	clrf	fsr2h,c
  1777   001040  0E08               	movlw	8
  1778   001042  26D9               	addwf	fsr2l,f,c
  1779   001044  50DF               	movf	indf2,w,c
  1780   001046  A4D8               	btfss	status,2,c
  1781   001048  EF28  F008         	goto	u1511
  1782   00104C  EF2A  F008         	goto	u1510
  1783   001050                     u1511:
  1784   001050  EF87  F008         	goto	l2530
  1785   001054                     u1510:
  1786   001054                     
  1787                           ;ECU_Layer/Keypad/ECU_keypad.c: 75:             {;ECU_Layer/Keypad/ECU_keypad.c: 76:    
      +                                       for (row_counter = 0; row_counter < 4; row_counter++)
  1788   001054  0E00               	movlw	0
  1789   001056  6E6C               	movwf	(keypad_get_value@row_counter+1)^0,c
  1790   001058  0E00               	movlw	0
  1791   00105A  6E6B               	movwf	keypad_get_value@row_counter^0,c
  1792   00105C                     l2498:
  1793   00105C  5063               	movf	keypad_get_value@_keypad^0,w,c
  1794   00105E  246B               	addwf	keypad_get_value@row_counter^0,w,c
  1795   001060  6E5B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1796   001062  0E01               	movlw	1
  1797   001064  6E5C               	movwf	gpio_pin_write_logic@_logic^0,c
  1798   001066  EC94  F009         	call	_gpio_pin_write_logic	;wreg free
  1799   00106A                     
  1800                           ;ECU_Layer/Keypad/ECU_keypad.c: 80:                     for(col_counter = 0; col_counter
      +                           < 4; col_counter++)
  1801   00106A  0E00               	movlw	0
  1802   00106C  6E6A               	movwf	(keypad_get_value@col_counter+1)^0,c
  1803   00106E  0E00               	movlw	0
  1804   001070  6E69               	movwf	keypad_get_value@col_counter^0,c
  1805   001072                     l2506:
  1806   001072  5063               	movf	keypad_get_value@_keypad^0,w,c
  1807   001074  2469               	addwf	keypad_get_value@col_counter^0,w,c
  1808   001076  0F04               	addlw	4
  1809   001078  6E5B               	movwf	gpio_pin_read_logic@_pin_config^0,c
  1810   00107A  0E68               	movlw	low keypad_get_value@col_state
  1811   00107C  6E5C               	movwf	gpio_pin_read_logic@_logic^0,c
  1812   00107E  ECB2  F00A         	call	_gpio_pin_read_logic	;wreg free
  1813   001082                     
  1814                           ;ECU_Layer/Keypad/ECU_keypad.c: 83:                         if(col_state == GPIO_OUTPUT_
      +                          HIGH)
  1815   001082  0468               	decf	keypad_get_value@col_state^0,w,c
  1816   001084  A4D8               	btfss	status,2,c
  1817   001086  EF47  F008         	goto	u1521
  1818   00108A  EF49  F008         	goto	u1520
  1819   00108E                     u1521:
  1820   00108E  EF59  F008         	goto	l2516
  1821   001092                     u1520:
  1822   001092                     
  1823                           ;ECU_Layer/Keypad/ECU_keypad.c: 84:                         {;ECU_Layer/Keypad/ECU_keypa
      +                          d.c: 85:                             *_value = keypad_values[row_counter][col_counter];
  1824   001092  506B               	movf	keypad_get_value@row_counter^0,w,c
  1825   001094  0D04               	mullw	4
  1826   001096  50F3               	movf	243,w,c
  1827   001098  0F80               	addlw	low _keypad_values
  1828   00109A  2469               	addwf	keypad_get_value@col_counter^0,w,c
  1829   00109C  6ED9               	movwf	fsr2l,c
  1830   00109E  6ADA               	clrf	fsr2h,c
  1831   0010A0  5064               	movf	keypad_get_value@_value^0,w,c
  1832   0010A2  6EE1               	movwf	fsr1l,c
  1833   0010A4  6AE2               	clrf	fsr1h,c
  1834   0010A6  CFDF FFE7          	movff	indf2,indf1
  1835   0010AA                     
  1836                           ;ECU_Layer/Keypad/ECU_keypad.c: 86:                             is_pressed = 1;
  1837   0010AA  0E01               	movlw	1
  1838   0010AC  6E66               	movwf	keypad_get_value@is_pressed^0,c
  1839   0010AE  EF66  F008         	goto	l2520
  1840   0010B2                     l2516:
  1841                           
  1842                           ;ECU_Layer/Keypad/ECU_keypad.c: 93:                     }
  1843   0010B2  4A69               	infsnz	keypad_get_value@col_counter^0,f,c
  1844   0010B4  2A6A               	incf	(keypad_get_value@col_counter+1)^0,f,c
  1845   0010B6  506A               	movf	(keypad_get_value@col_counter+1)^0,w,c
  1846   0010B8  E109               	bnz	u1530
  1847   0010BA  0E04               	movlw	4
  1848   0010BC  5C69               	subwf	keypad_get_value@col_counter^0,w,c
  1849   0010BE  A0D8               	btfss	status,0,c
  1850   0010C0  EF64  F008         	goto	u1531
  1851   0010C4  EF66  F008         	goto	u1530
  1852   0010C8                     u1531:
  1853   0010C8  EF39  F008         	goto	l2506
  1854   0010CC                     u1530:
  1855   0010CC                     l2520:
  1856                           
  1857                           ;ECU_Layer/Keypad/ECU_keypad.c: 94:                     ret = gpio_pin_write_logic(&(_ke
      +                          ypad->keypad_rows[row_counter]),GPIO_OUTPUT_LOW);
  1858   0010CC  5063               	movf	keypad_get_value@_keypad^0,w,c
  1859   0010CE  246B               	addwf	keypad_get_value@row_counter^0,w,c
  1860   0010D0  6E5B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1861   0010D2  0E00               	movlw	0
  1862   0010D4  6E5C               	movwf	gpio_pin_write_logic@_logic^0,c
  1863   0010D6  EC94  F009         	call	_gpio_pin_write_logic	;wreg free
  1864   0010DA  6E67               	movwf	keypad_get_value@ret^0,c
  1865   0010DC                     
  1866                           ;ECU_Layer/Keypad/ECU_keypad.c: 95:                     if(col_state == GPIO_OUTPUT_HIGH
      +                          )
  1867   0010DC  0468               	decf	keypad_get_value@col_state^0,w,c
  1868   0010DE  A4D8               	btfss	status,2,c
  1869   0010E0  EF74  F008         	goto	u1541
  1870   0010E4  EF76  F008         	goto	u1540
  1871   0010E8                     u1541:
  1872   0010E8  EF78  F008         	goto	l2526
  1873   0010EC                     u1540:
  1874   0010EC  EFEF  F008         	goto	l2570
  1875   0010F0                     l2526:
  1876                           
  1877                           ;ECU_Layer/Keypad/ECU_keypad.c: 99:                 }
  1878   0010F0  4A6B               	infsnz	keypad_get_value@row_counter^0,f,c
  1879   0010F2  2A6C               	incf	(keypad_get_value@row_counter+1)^0,f,c
  1880   0010F4  506C               	movf	(keypad_get_value@row_counter+1)^0,w,c
  1881   0010F6  E109               	bnz	u1550
  1882   0010F8  0E04               	movlw	4
  1883   0010FA  5C6B               	subwf	keypad_get_value@row_counter^0,w,c
  1884   0010FC  A0D8               	btfss	status,0,c
  1885   0010FE  EF83  F008         	goto	u1551
  1886   001102  EF85  F008         	goto	u1550
  1887   001106                     u1551:
  1888   001106  EF2E  F008         	goto	l2498
  1889   00110A                     u1550:
  1890   00110A  EFEF  F008         	goto	l2570
  1891   00110E                     l2530:
  1892                           
  1893                           ;ECU_Layer/Keypad/ECU_keypad.c: 102:             {;ECU_Layer/Keypad/ECU_keypad.c: 103:  
      +                                         if(_keypad->keypad_connection_type == 1)
  1894   00110E  5063               	movf	keypad_get_value@_keypad^0,w,c
  1895   001110  6ED9               	movwf	fsr2l,c
  1896   001112  6ADA               	clrf	fsr2h,c
  1897   001114  0E08               	movlw	8
  1898   001116  26D9               	addwf	fsr2l,f,c
  1899   001118  04DE               	decf	postinc2,w,c
  1900   00111A  A4D8               	btfss	status,2,c
  1901   00111C  EF92  F008         	goto	u1561
  1902   001120  EF94  F008         	goto	u1560
  1903   001124                     u1561:
  1904   001124  EFEF  F008         	goto	l2570
  1905   001128                     u1560:
  1906   001128                     
  1907                           ;ECU_Layer/Keypad/ECU_keypad.c: 104:                 {;ECU_Layer/Keypad/ECU_keypad.c: 10
      +                          5:                     for (row_counter = 0; row_counter < 4; row_counter++)
  1908   001128  0E00               	movlw	0
  1909   00112A  6E6C               	movwf	(keypad_get_value@row_counter+1)^0,c
  1910   00112C  0E00               	movlw	0
  1911   00112E  6E6B               	movwf	keypad_get_value@row_counter^0,c
  1912   001130                     l2538:
  1913   001130  5063               	movf	keypad_get_value@_keypad^0,w,c
  1914   001132  246B               	addwf	keypad_get_value@row_counter^0,w,c
  1915   001134  6E5B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1916   001136  0E00               	movlw	0
  1917   001138  6E5C               	movwf	gpio_pin_write_logic@_logic^0,c
  1918   00113A  EC94  F009         	call	_gpio_pin_write_logic	;wreg free
  1919   00113E                     
  1920                           ;ECU_Layer/Keypad/ECU_keypad.c: 109:                         for(col_counter = 0; col_co
      +                          unter < 4; col_counter++)
  1921   00113E  0E00               	movlw	0
  1922   001140  6E6A               	movwf	(keypad_get_value@col_counter+1)^0,c
  1923   001142  0E00               	movlw	0
  1924   001144  6E69               	movwf	keypad_get_value@col_counter^0,c
  1925   001146                     l2546:
  1926   001146  5063               	movf	keypad_get_value@_keypad^0,w,c
  1927   001148  2469               	addwf	keypad_get_value@col_counter^0,w,c
  1928   00114A  0F04               	addlw	4
  1929   00114C  6E5B               	movwf	gpio_pin_read_logic@_pin_config^0,c
  1930   00114E  0E68               	movlw	low keypad_get_value@col_state
  1931   001150  6E5C               	movwf	gpio_pin_read_logic@_logic^0,c
  1932   001152  ECB2  F00A         	call	_gpio_pin_read_logic	;wreg free
  1933   001156                     
  1934                           ;ECU_Layer/Keypad/ECU_keypad.c: 112:                             if(col_state == GPIO_OU
      +                          TPUT_LOW)
  1935   001156  5068               	movf	keypad_get_value@col_state^0,w,c
  1936   001158  A4D8               	btfss	status,2,c
  1937   00115A  EFB1  F008         	goto	u1571
  1938   00115E  EFB3  F008         	goto	u1570
  1939   001162                     u1571:
  1940   001162  EFC3  F008         	goto	l2556
  1941   001166                     u1570:
  1942   001166                     
  1943                           ;ECU_Layer/Keypad/ECU_keypad.c: 113:                             {;ECU_Layer/Keypad/ECU_
      +                          keypad.c: 114:                                 *_value = keypad_values[row_counter][col_
      +                          counter];
  1944   001166  506B               	movf	keypad_get_value@row_counter^0,w,c
  1945   001168  0D04               	mullw	4
  1946   00116A  50F3               	movf	243,w,c
  1947   00116C  0F80               	addlw	low _keypad_values
  1948   00116E  2469               	addwf	keypad_get_value@col_counter^0,w,c
  1949   001170  6ED9               	movwf	fsr2l,c
  1950   001172  6ADA               	clrf	fsr2h,c
  1951   001174  5064               	movf	keypad_get_value@_value^0,w,c
  1952   001176  6EE1               	movwf	fsr1l,c
  1953   001178  6AE2               	clrf	fsr1h,c
  1954   00117A  CFDF FFE7          	movff	indf2,indf1
  1955   00117E                     
  1956                           ;ECU_Layer/Keypad/ECU_keypad.c: 115:                                 is_pressed = 1;
  1957   00117E  0E01               	movlw	1
  1958   001180  6E66               	movwf	keypad_get_value@is_pressed^0,c
  1959   001182  EFD0  F008         	goto	l2560
  1960   001186                     l2556:
  1961                           
  1962                           ;ECU_Layer/Keypad/ECU_keypad.c: 122:                         }
  1963   001186  4A69               	infsnz	keypad_get_value@col_counter^0,f,c
  1964   001188  2A6A               	incf	(keypad_get_value@col_counter+1)^0,f,c
  1965   00118A  506A               	movf	(keypad_get_value@col_counter+1)^0,w,c
  1966   00118C  E109               	bnz	u1580
  1967   00118E  0E04               	movlw	4
  1968   001190  5C69               	subwf	keypad_get_value@col_counter^0,w,c
  1969   001192  A0D8               	btfss	status,0,c
  1970   001194  EFCE  F008         	goto	u1581
  1971   001198  EFD0  F008         	goto	u1580
  1972   00119C                     u1581:
  1973   00119C  EFA3  F008         	goto	l2546
  1974   0011A0                     u1580:
  1975   0011A0                     l2560:
  1976                           
  1977                           ;ECU_Layer/Keypad/ECU_keypad.c: 123:                         ret = gpio_pin_write_logic(
      +                          &(_keypad->keypad_rows[row_counter]),GPIO_OUTPUT_HIGH);
  1978   0011A0  5063               	movf	keypad_get_value@_keypad^0,w,c
  1979   0011A2  246B               	addwf	keypad_get_value@row_counter^0,w,c
  1980   0011A4  6E5B               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1981   0011A6  0E01               	movlw	1
  1982   0011A8  6E5C               	movwf	gpio_pin_write_logic@_logic^0,c
  1983   0011AA  EC94  F009         	call	_gpio_pin_write_logic	;wreg free
  1984   0011AE  6E67               	movwf	keypad_get_value@ret^0,c
  1985   0011B0                     
  1986                           ;ECU_Layer/Keypad/ECU_keypad.c: 124:                         if(col_state == GPIO_OUTPUT
      +                          _LOW)
  1987   0011B0  5068               	movf	keypad_get_value@col_state^0,w,c
  1988   0011B2  A4D8               	btfss	status,2,c
  1989   0011B4  EFDE  F008         	goto	u1591
  1990   0011B8  EFE0  F008         	goto	u1590
  1991   0011BC                     u1591:
  1992   0011BC  EFE2  F008         	goto	l2566
  1993   0011C0                     u1590:
  1994   0011C0  EFEF  F008         	goto	l2570
  1995   0011C4                     l2566:
  1996                           
  1997                           ;ECU_Layer/Keypad/ECU_keypad.c: 128:                     }
  1998   0011C4  4A6B               	infsnz	keypad_get_value@row_counter^0,f,c
  1999   0011C6  2A6C               	incf	(keypad_get_value@row_counter+1)^0,f,c
  2000   0011C8  506C               	movf	(keypad_get_value@row_counter+1)^0,w,c
  2001   0011CA  E109               	bnz	u1600
  2002   0011CC  0E04               	movlw	4
  2003   0011CE  5C6B               	subwf	keypad_get_value@row_counter^0,w,c
  2004   0011D0  A0D8               	btfss	status,0,c
  2005   0011D2  EFED  F008         	goto	u1601
  2006   0011D6  EFEF  F008         	goto	u1600
  2007   0011DA                     u1601:
  2008   0011DA  EF98  F008         	goto	l2538
  2009   0011DE                     u1600:
  2010   0011DE                     l2570:
  2011                           
  2012                           ;ECU_Layer/Keypad/ECU_keypad.c: 72:         while(is_pressed == 0)
  2013   0011DE  5066               	movf	keypad_get_value@is_pressed^0,w,c
  2014   0011E0  B4D8               	btfsc	status,2,c
  2015   0011E2  EFF5  F008         	goto	u1611
  2016   0011E6  EFF7  F008         	goto	u1610
  2017   0011EA                     u1611:
  2018   0011EA  EF1D  F008         	goto	l2490
  2019   0011EE                     u1610:
  2020   0011EE  EFFB  F008         	goto	l158
  2021   0011F2                     l2572:
  2022                           
  2023                           ;ECU_Layer/Keypad/ECU_keypad.c: 137:     {;ECU_Layer/Keypad/ECU_keypad.c: 138:         r
      +                          et = (Std_ReturnType)0x00;
  2024   0011F2  0E00               	movlw	0
  2025   0011F4  6E67               	movwf	keypad_get_value@ret^0,c
  2026   0011F6                     l158:
  2027                           
  2028                           ;ECU_Layer/Keypad/ECU_keypad.c: 140:     return ret;
  2029   0011F6  5067               	movf	keypad_get_value@ret^0,w,c
  2030   0011F8  0012               	return		;funcret
  2031   0011FA                     __end_of_keypad_get_value:
  2032                           	callstack 0
  2033                           
  2034 ;; *************** function _gpio_pin_write_logic *****************
  2035 ;; Defined at:
  2036 ;;		line 88 in file "MCAL_Layer/GPIO/HAL_GPIO.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2039 ;;		 -> calc_v1$lcd_pins(8), calc_v1$keypad_rows(4), calc_v1(20), relay_turn_off@relay_pin(1), 
  2040 ;;		 -> relay_turn_on@relay_pin(1), relay_initialize@relay_pin(1), led_turn_off@pin(1), led_turn_on@pin(1), 
  2041 ;;		 -> led_initialize@pin(1), 
  2042 ;;  _logic          1    1[COMRAM] enum E2997
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  Status          1    7[COMRAM] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      unsigned char 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        8 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_keypad_get_value
  2064 ;;		_lcd_8bit_send_command
  2065 ;;		_lcd_8bit_send_data
  2066 ;;		_lcd_send_8bit_enable
  2067 ;;		_gpio_pin_initialize
  2068 ;;		_dc_motor_move_right
  2069 ;;		_dc_motor_move_left
  2070 ;;		_dc_motor_stop
  2071 ;;		_dc_motor_break
  2072 ;;		_lcd_4bit_send_command
  2073 ;;		_lcd_4bit_send_data
  2074 ;;		_lcd_send_4_bit
  2075 ;;		_lcd_send_4bit_enable
  2076 ;;		_led_turn_on
  2077 ;;		_led_turn_off
  2078 ;;		_relay_turn_on
  2079 ;;		_relay_turn_off
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text12
  2084   001328                     __ptext12:
  2085                           	callstack 0
  2086   001328                     _gpio_pin_write_logic:
  2087                           	callstack 25
  2088   001328                     
  2089                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 88: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          *_pin_config, logic_t _logic);MCAL_Layer/GPIO/HAL_GPIO.c: 89: {;MCAL_Layer/GPIO/HAL_GPIO
      +                          .c: 90:     Std_ReturnType Status = (Std_ReturnType)0x01;
  2090   001328  0E01               	movlw	1
  2091   00132A  6E62               	movwf	gpio_pin_write_logic@Status^0,c
  2092                           
  2093                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 91:     if(_pin_config != ((void*)0) && (_pin_config->direc
      +                          tion == GPIO_DIRECTION_OUTBUT) && (_pin_config->pin < 8))
  2094   00132C  505B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2095   00132E  B4D8               	btfsc	status,2,c
  2096   001330  EF9C  F009         	goto	u1241
  2097   001334  EF9E  F009         	goto	u1240
  2098   001338                     u1241:
  2099   001338  EF0D  F00A         	goto	l2324
  2100   00133C                     u1240:
  2101   00133C  505B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2102   00133E  6ED9               	movwf	fsr2l,c
  2103   001340  6ADA               	clrf	fsr2h,c
  2104   001342  BCDF               	btfsc	indf2,6,c
  2105   001344  EFA6  F009         	goto	u1251
  2106   001348  EFA8  F009         	goto	u1250
  2107   00134C                     u1251:
  2108   00134C  EF0D  F00A         	goto	l2324
  2109   001350                     u1250:
  2110   001350  505B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2111   001352  6ED9               	movwf	fsr2l,c
  2112   001354  6ADA               	clrf	fsr2h,c
  2113   001356  30DF               	rrcf	223,w,c
  2114   001358  32E8               	rrcf	wreg,f,c
  2115   00135A  32E8               	rrcf	wreg,f,c
  2116   00135C  0B07               	andlw	7
  2117   00135E  6E5D               	movwf	??_gpio_pin_write_logic^0,c
  2118   001360  0E08               	movlw	8
  2119   001362  605D               	cpfslt	??_gpio_pin_write_logic^0,c
  2120   001364  EFB6  F009         	goto	u1261
  2121   001368  EFB8  F009         	goto	u1260
  2122   00136C                     u1261:
  2123   00136C  EF0D  F00A         	goto	l2324
  2124   001370                     u1260:
  2125   001370  EF11  F00A         	goto	l2328
  2126   001374                     l2320:
  2127                           
  2128                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 96:                 ((*lat_reg[_pin_config->port] &= ~(((ui
      +                          nt8) 1 ) <<(_pin_config->pin))));
  2129   001374  505B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2130   001376  6ED9               	movwf	fsr2l,c
  2131   001378  6ADA               	clrf	fsr2h,c
  2132   00137A  30DF               	rrcf	223,w,c
  2133   00137C  32E8               	rrcf	wreg,f,c
  2134   00137E  32E8               	rrcf	wreg,f,c
  2135   001380  0B07               	andlw	7
  2136   001382  6E5D               	movwf	??_gpio_pin_write_logic^0,c
  2137   001384  0E01               	movlw	1
  2138   001386  6E5E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2139   001388  2A5D               	incf	??_gpio_pin_write_logic^0,f,c
  2140   00138A  EFC9  F009         	goto	u1274
  2141   00138E                     u1275:
  2142   00138E  90D8               	bcf	status,0,c
  2143   001390  365E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2144   001392                     u1274:
  2145   001392  2E5D               	decfsz	??_gpio_pin_write_logic^0,f,c
  2146   001394  EFC7  F009         	goto	u1275
  2147   001398  505E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2148   00139A  0AFF               	xorlw	255
  2149   00139C  6E5F               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2150   00139E  505B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2151   0013A0  6ED9               	movwf	fsr2l,c
  2152   0013A2  6ADA               	clrf	fsr2h,c
  2153   0013A4  50DF               	movf	223,w,c
  2154   0013A6  0B07               	andlw	7
  2155   0013A8  0D02               	mullw	2
  2156   0013AA  50F3               	movf	243,w,c
  2157   0013AC  0F0B               	addlw	low _lat_reg
  2158   0013AE  6ED9               	movwf	fsr2l,c
  2159   0013B0  6ADA               	clrf	fsr2h,c
  2160   0013B2  CFDE F060          	movff	postinc2,??_gpio_pin_write_logic+3
  2161   0013B6  CFDD F061          	movff	postdec2,??_gpio_pin_write_logic+4
  2162   0013BA  C060  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2163   0013BE  C061  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2164   0013C2  505F               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2165   0013C4  16DF               	andwf	indf2,f,c
  2166                           
  2167                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 97:                 break;
  2168   0013C6  EF26  F00A         	goto	l477
  2169   0013CA                     l2322:
  2170                           
  2171                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 99:                 ((*lat_reg[_pin_config->port] |=(((uint
      +                          8) 1 ) <<(_pin_config->pin))));
  2172   0013CA  505B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2173   0013CC  6ED9               	movwf	fsr2l,c
  2174   0013CE  6ADA               	clrf	fsr2h,c
  2175   0013D0  30DF               	rrcf	223,w,c
  2176   0013D2  32E8               	rrcf	wreg,f,c
  2177   0013D4  32E8               	rrcf	wreg,f,c
  2178   0013D6  0B07               	andlw	7
  2179   0013D8  6E5D               	movwf	??_gpio_pin_write_logic^0,c
  2180   0013DA  0E01               	movlw	1
  2181   0013DC  6E5E               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2182   0013DE  2A5D               	incf	??_gpio_pin_write_logic^0,f,c
  2183   0013E0  EFF4  F009         	goto	u1284
  2184   0013E4                     u1285:
  2185   0013E4  90D8               	bcf	status,0,c
  2186   0013E6  365E               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2187   0013E8                     u1284:
  2188   0013E8  2E5D               	decfsz	??_gpio_pin_write_logic^0,f,c
  2189   0013EA  EFF2  F009         	goto	u1285
  2190   0013EE  505B               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2191   0013F0  6ED9               	movwf	fsr2l,c
  2192   0013F2  6ADA               	clrf	fsr2h,c
  2193   0013F4  50DF               	movf	223,w,c
  2194   0013F6  0B07               	andlw	7
  2195   0013F8  0D02               	mullw	2
  2196   0013FA  50F3               	movf	243,w,c
  2197   0013FC  0F0B               	addlw	low _lat_reg
  2198   0013FE  6ED9               	movwf	fsr2l,c
  2199   001400  6ADA               	clrf	fsr2h,c
  2200   001402  CFDE F05F          	movff	postinc2,??_gpio_pin_write_logic+2
  2201   001406  CFDD F060          	movff	postdec2,??_gpio_pin_write_logic+3
  2202   00140A  C05F  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2203   00140E  C060  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2204   001412  505E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2205   001414  12DF               	iorwf	indf2,f,c
  2206                           
  2207                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 100:                 break;
  2208   001416  EF26  F00A         	goto	l477
  2209   00141A                     l2324:
  2210                           
  2211                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 102:                 Status = (Std_ReturnType)0x00;
  2212   00141A  0E00               	movlw	0
  2213   00141C  6E62               	movwf	gpio_pin_write_logic@Status^0,c
  2214                           
  2215                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 103:                 break;
  2216   00141E  EF26  F00A         	goto	l477
  2217   001422                     l2328:
  2218   001422  505C               	movf	gpio_pin_write_logic@_logic^0,w,c
  2219   001424  6E5D               	movwf	??_gpio_pin_write_logic^0,c
  2220   001426  6A5E               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2221                           
  2222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2223                           ; Switch size 1, requested type "simple"
  2224                           ; Number of cases is 1, Range of values is 0 to 0
  2225                           ; switch strategies available:
  2226                           ; Name         Instructions Cycles
  2227                           ; simple_byte            4     3 (average)
  2228                           ;	Chosen strategy is simple_byte
  2229   001428  505E               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2230   00142A  0A00               	xorlw	0	; case 0
  2231   00142C  B4D8               	btfsc	status,2,c
  2232   00142E  EF1B  F00A         	goto	l3150
  2233   001432  EF0D  F00A         	goto	l2324
  2234   001436                     l3150:
  2235                           
  2236                           ; Switch size 1, requested type "simple"
  2237                           ; Number of cases is 2, Range of values is 0 to 1
  2238                           ; switch strategies available:
  2239                           ; Name         Instructions Cycles
  2240                           ; simple_byte            7     4 (average)
  2241                           ;	Chosen strategy is simple_byte
  2242   001436  505D               	movf	??_gpio_pin_write_logic^0,w,c
  2243   001438  0A00               	xorlw	0	; case 0
  2244   00143A  B4D8               	btfsc	status,2,c
  2245   00143C  EFBA  F009         	goto	l2320
  2246   001440  0A01               	xorlw	1	; case 1
  2247   001442  B4D8               	btfsc	status,2,c
  2248   001444  EFE5  F009         	goto	l2322
  2249   001448  EF0D  F00A         	goto	l2324
  2250   00144C                     l477:
  2251                           
  2252                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 110:     return Status;
  2253   00144C  5062               	movf	gpio_pin_write_logic@Status^0,w,c
  2254   00144E  0012               	return		;funcret
  2255   001450                     __end_of_gpio_pin_write_logic:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _gpio_pin_read_logic *****************
  2259 ;; Defined at:
  2260 ;;		line 124 in file "MCAL_Layer/GPIO/HAL_GPIO.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2263 ;;		 -> calc_v1$keypad_columns(4), calc_v1(20), 
  2264 ;;  _logic          1    1[COMRAM] PTR enum E2997
  2265 ;;		 -> keypad_get_value@col_state(1), button_read_state@btn_logic(1), 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  Status          1    6[COMRAM] unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      unsigned char 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;Total ram usage:        7 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_keypad_get_value
  2287 ;;		_button_read_state
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text13
  2292   001564                     __ptext13:
  2293                           	callstack 0
  2294   001564                     _gpio_pin_read_logic:
  2295                           	callstack 28
  2296   001564                     
  2297                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 124: Std_ReturnType gpio_pin_read_logic(const pin_config_t 
      +                          *_pin_config, logic_t *_logic);MCAL_Layer/GPIO/HAL_GPIO.c: 125: {;MCAL_Layer/GPIO/HAL_GP
      +                          IO.c: 126:     Std_ReturnType Status = (Std_ReturnType)0x01;
  2298   001564  0E01               	movlw	1
  2299   001566  6E61               	movwf	gpio_pin_read_logic@Status^0,c
  2300                           
  2301                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 127:     if( (_pin_config != ((void*)0)) && (_pin_config->p
      +                          in < 8) && (_logic != ((void*)0)))
  2302   001568  505B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2303   00156A  B4D8               	btfsc	status,2,c
  2304   00156C  EFBA  F00A         	goto	u1401
  2305   001570  EFBC  F00A         	goto	u1400
  2306   001574                     u1401:
  2307   001574  EF00  F00B         	goto	l2408
  2308   001578                     u1400:
  2309   001578  505B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2310   00157A  6ED9               	movwf	fsr2l,c
  2311   00157C  6ADA               	clrf	fsr2h,c
  2312   00157E  30DF               	rrcf	223,w,c
  2313   001580  32E8               	rrcf	wreg,f,c
  2314   001582  32E8               	rrcf	wreg,f,c
  2315   001584  0B07               	andlw	7
  2316   001586  6E5D               	movwf	??_gpio_pin_read_logic^0,c
  2317   001588  0E08               	movlw	8
  2318   00158A  605D               	cpfslt	??_gpio_pin_read_logic^0,c
  2319   00158C  EFCA  F00A         	goto	u1411
  2320   001590  EFCC  F00A         	goto	u1410
  2321   001594                     u1411:
  2322   001594  EF00  F00B         	goto	l2408
  2323   001598                     u1410:
  2324   001598  505C               	movf	gpio_pin_read_logic@_logic^0,w,c
  2325   00159A  B4D8               	btfsc	status,2,c
  2326   00159C  EFD2  F00A         	goto	u1421
  2327   0015A0  EFD4  F00A         	goto	u1420
  2328   0015A4                     u1421:
  2329   0015A4  EF00  F00B         	goto	l2408
  2330   0015A8                     u1420:
  2331   0015A8                     
  2332                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 128:     {;MCAL_Layer/GPIO/HAL_GPIO.c: 129:         *_logic
      +                           = ((*port_reg[_pin_config->port] >> _pin_config->pin) & ((uint8) 1 ) );
  2333   0015A8  505C               	movf	gpio_pin_read_logic@_logic^0,w,c
  2334   0015AA  6ED9               	movwf	fsr2l,c
  2335   0015AC  6ADA               	clrf	fsr2h,c
  2336   0015AE  505B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2337   0015B0  6EE1               	movwf	fsr1l,c
  2338   0015B2  6AE2               	clrf	fsr1h,c
  2339   0015B4  30E7               	rrcf	231,w,c
  2340   0015B6  32E8               	rrcf	wreg,f,c
  2341   0015B8  32E8               	rrcf	wreg,f,c
  2342   0015BA  0B07               	andlw	7
  2343   0015BC  6E5D               	movwf	??_gpio_pin_read_logic^0,c
  2344   0015BE  505B               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  2345   0015C0  6EE1               	movwf	fsr1l,c
  2346   0015C2  6AE2               	clrf	fsr1h,c
  2347   0015C4  50E7               	movf	231,w,c
  2348   0015C6  0B07               	andlw	7
  2349   0015C8  0D02               	mullw	2
  2350   0015CA  50F3               	movf	243,w,c
  2351   0015CC  0F01               	addlw	low _port_reg
  2352   0015CE  6EE1               	movwf	fsr1l,c
  2353   0015D0  6AE2               	clrf	fsr1h,c
  2354   0015D2  CFE6 F05E          	movff	postinc1,??_gpio_pin_read_logic+1
  2355   0015D6  CFE5 F05F          	movff	postdec1,??_gpio_pin_read_logic+2
  2356   0015DA  C05E  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
  2357   0015DE  C05F  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
  2358   0015E2  50E7               	movf	indf1,w,c
  2359   0015E4  6E60               	movwf	(??_gpio_pin_read_logic+3)^0,c
  2360   0015E6  2A5D               	incf	??_gpio_pin_read_logic^0,f,c
  2361   0015E8  EFF8  F00A         	goto	u1434
  2362   0015EC                     u1435:
  2363   0015EC  90D8               	bcf	status,0,c
  2364   0015EE  3260               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
  2365   0015F0                     u1434:
  2366   0015F0  2E5D               	decfsz	??_gpio_pin_read_logic^0,f,c
  2367   0015F2  EFF6  F00A         	goto	u1435
  2368   0015F6  5060               	movf	(??_gpio_pin_read_logic+3)^0,w,c
  2369   0015F8  0B01               	andlw	1
  2370   0015FA  6EDF               	movwf	indf2,c
  2371                           
  2372                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 130:     }
  2373   0015FC  EF02  F00B         	goto	l482
  2374   001600                     l2408:
  2375                           
  2376                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 132:     {;MCAL_Layer/GPIO/HAL_GPIO.c: 133:         Status 
      +                          = (Std_ReturnType)0x00;
  2377   001600  0E00               	movlw	0
  2378   001602  6E61               	movwf	gpio_pin_read_logic@Status^0,c
  2379   001604                     l482:
  2380                           
  2381                           ;MCAL_Layer/GPIO/HAL_GPIO.c: 135:     return Status;
  2382   001604  5061               	movf	gpio_pin_read_logic@Status^0,w,c
  2383   001606  0012               	return		;funcret
  2384   001608                     __end_of_gpio_pin_read_logic:
  2385                           	callstack 0
  2386                           
  2387                           	psect	smallconst
  2388   001000                     __psmallconst:
  2389                           	callstack 0
  2390   001000  00                 	db	0
  2391   001001  00                 	db	0	; dummy byte at the end
  2392   000000                     
  2393                           	psect	rparam
  2394   000000                     
  2395                           	psect	config
  2396                           
  2397                           ; Padding undefined space
  2398   300000                     	org	3145728
  2399   300000  FF                 	db	255
  2400                           
  2401                           ;Config register CONFIG1H @ 0x300001
  2402                           ;	Oscillator Selection bits
  2403                           ;	OSC = HS, HS oscillator
  2404                           ;	Fail-Safe Clock Monitor Enable bit
  2405                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2406                           ;	Internal/External Oscillator Switchover bit
  2407                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2408   300001                     	org	3145729
  2409   300001  02                 	db	2
  2410                           
  2411                           ;Config register CONFIG2L @ 0x300002
  2412                           ;	Power-up Timer Enable bit
  2413                           ;	PWRT = OFF, PWRT disabled
  2414                           ;	Brown-out Reset Enable bits
  2415                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2416                           ;	Brown Out Reset Voltage bits
  2417                           ;	BORV = 1, 
  2418   300002                     	org	3145730
  2419   300002  09                 	db	9
  2420                           
  2421                           ;Config register CONFIG2H @ 0x300003
  2422                           ;	Watchdog Timer Enable bit
  2423                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2424                           ;	Watchdog Timer Postscale Select bits
  2425                           ;	WDTPS = 32768, 1:32768
  2426   300003                     	org	3145731
  2427   300003  1E                 	db	30
  2428                           
  2429                           ; Padding undefined space
  2430   300004                     	org	3145732
  2431   300004  FF                 	db	255
  2432                           
  2433                           ;Config register CONFIG3H @ 0x300005
  2434                           ;	CCP2 MUX bit
  2435                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2436                           ;	PORTB A/D Enable bit
  2437                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2438                           ;	Low-Power Timer1 Oscillator Enable bit
  2439                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2440                           ;	MCLR Pin Enable bit
  2441                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2442   300005                     	org	3145733
  2443   300005  81                 	db	129
  2444                           
  2445                           ;Config register CONFIG4L @ 0x300006
  2446                           ;	Stack Full/Underflow Reset Enable bit
  2447                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2448                           ;	Single-Supply ICSP Enable bit
  2449                           ;	LVP = OFF, Single-Supply ICSP disabled
  2450                           ;	Extended Instruction Set Enable bit
  2451                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2452                           ;	Background Debugger Enable bit
  2453                           ;	DEBUG = 0x1, unprogrammed default
  2454   300006                     	org	3145734
  2455   300006  81                 	db	129
  2456                           
  2457                           ; Padding undefined space
  2458   300007                     	org	3145735
  2459   300007  FF                 	db	255
  2460                           
  2461                           ;Config register CONFIG5L @ 0x300008
  2462                           ;	Code Protection bit
  2463                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2464                           ;	Code Protection bit
  2465                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2466                           ;	Code Protection bit
  2467                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2468                           ;	Code Protection bit
  2469                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2470   300008                     	org	3145736
  2471   300008  0F                 	db	15
  2472                           
  2473                           ;Config register CONFIG5H @ 0x300009
  2474                           ;	Boot Block Code Protection bit
  2475                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2476                           ;	Data EEPROM Code Protection bit
  2477                           ;	CPD = OFF, Data EEPROM not code-protected
  2478   300009                     	org	3145737
  2479   300009  C0                 	db	192
  2480                           
  2481                           ;Config register CONFIG6L @ 0x30000A
  2482                           ;	Write Protection bit
  2483                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2484                           ;	Write Protection bit
  2485                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2486                           ;	Write Protection bit
  2487                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2488                           ;	Write Protection bit
  2489                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2490   30000A                     	org	3145738
  2491   30000A  0F                 	db	15
  2492                           
  2493                           ;Config register CONFIG6H @ 0x30000B
  2494                           ;	Configuration Register Write Protection bit
  2495                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2496                           ;	Boot Block Write Protection bit
  2497                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2498                           ;	Data EEPROM Write Protection bit
  2499                           ;	WRTD = OFF, Data EEPROM not write-protected
  2500   30000B                     	org	3145739
  2501   30000B  E0                 	db	224
  2502                           
  2503                           ;Config register CONFIG7L @ 0x30000C
  2504                           ;	Table Read Protection bit
  2505                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2506                           ;	Table Read Protection bit
  2507                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2508                           ;	Table Read Protection bit
  2509                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2510                           ;	Table Read Protection bit
  2511                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2512   30000C                     	org	3145740
  2513   30000C  0F                 	db	15
  2514                           
  2515                           ;Config register CONFIG7H @ 0x30000D
  2516                           ;	Boot Block Table Read Protection bit
  2517                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2518   30000D                     	org	3145741
  2519   30000D  40                 	db	64
  2520                           tosu	equ	0xFFF
  2521                           tosh	equ	0xFFE
  2522                           tosl	equ	0xFFD
  2523                           stkptr	equ	0xFFC
  2524                           pclatu	equ	0xFFB
  2525                           pclath	equ	0xFFA
  2526                           pcl	equ	0xFF9
  2527                           tblptru	equ	0xFF8
  2528                           tblptrh	equ	0xFF7
  2529                           tblptrl	equ	0xFF6
  2530                           tablat	equ	0xFF5
  2531                           prodh	equ	0xFF4
  2532                           prodl	equ	0xFF3
  2533                           indf0	equ	0xFEF
  2534                           postinc0	equ	0xFEE
  2535                           postdec0	equ	0xFED
  2536                           preinc0	equ	0xFEC
  2537                           plusw0	equ	0xFEB
  2538                           fsr0h	equ	0xFEA
  2539                           fsr0l	equ	0xFE9
  2540                           wreg	equ	0xFE8
  2541                           indf1	equ	0xFE7
  2542                           postinc1	equ	0xFE6
  2543                           postdec1	equ	0xFE5
  2544                           preinc1	equ	0xFE4
  2545                           plusw1	equ	0xFE3
  2546                           fsr1h	equ	0xFE2
  2547                           fsr1l	equ	0xFE1
  2548                           bsr	equ	0xFE0
  2549                           indf2	equ	0xFDF
  2550                           postinc2	equ	0xFDE
  2551                           postdec2	equ	0xFDD
  2552                           preinc2	equ	0xFDC
  2553                           plusw2	equ	0xFDB
  2554                           fsr2h	equ	0xFDA
  2555                           fsr2l	equ	0xFD9
  2556                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        126
    BSS         8
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     24     123
    BANK0           128      0      36
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    calculator_get_key@_calc	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), 

    calculator_get_key@_value	PTR unsigned char  size(1) Largest target is 1
		 -> value(COMRAM[1]), 

    calculator_initialize@_calc	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), calc_v1$keypad_columns(BANK0[4]), calc_v1$keypad_rows(BANK0[4]), calc_v1$lcd_pins(BANK0[8]), 
		 -> led_initialize@pin(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), calc_v1$keypad_rows(BANK0[4]), calc_v1$lcd_pins(BANK0[8]), led_initialize@pin(COMRAM[1]), 
		 -> relay_initialize@relay_pin(COMRAM[1]), 

    gpio_pin_read_logic@_logic	PTR enum E2997 size(1) Largest target is 1
		 -> button_read_state@btn_logic(COMRAM[1]), keypad_get_value@col_state(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), calc_v1$keypad_columns(BANK0[4]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), calc_v1$keypad_rows(BANK0[4]), calc_v1$lcd_pins(BANK0[8]), led_initialize@pin(COMRAM[1]), 
		 -> led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), relay_turn_off@relay_pin(COMRAM[1]), 
		 -> relay_turn_on@relay_pin(COMRAM[1]), 

    keypad_get_value@_keypad	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), 

    keypad_get_value@_value	PTR unsigned char  size(1) Largest target is 1
		 -> value(COMRAM[1]), 

    keypad_initialize@_keypad	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), 

    lat_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_8bit_initialize@_lcd	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), 

    lcd_8bit_send_command@_lcd	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), 

    lcd_8bit_send_data@_lcd	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), 

    lcd_send_8bit_enable@_lcd	PTR const struct . size(1) Largest target is 20
		 -> calc_v1(BANK0[20]), 

    port_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    sp__memset	PTR void  size(2) Largest target is 0

    tris_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _ecu_layer_initialize->_calculator_initialize
    _calculator_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_send_8bit_enable
    _keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _calculator_get_key->_keypad_get_value
    _lcd_8bit_send_data->_lcd_send_8bit_enable
    _lcd_send_8bit_enable->_gpio_pin_write_logic
    _keypad_get_value->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   44438
                                             22 COMRAM     2     2      0
                 _calculator_get_key
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (1) _ecu_layer_initialize                                 0     0      0   26527
              _calculator_initialize
 ---------------------------------------------------------------------------------
 (2) _calculator_initialize                                2     1      1   26527
                                             20 COMRAM     2     1      1
                  _keypad_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   19183
                                             16 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_command                                6     4      2   12274
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
               _lcd_send_8bit_enable
 ---------------------------------------------------------------------------------
 (3) _keypad_initialize                                    3     2      1    7176
                                             10 COMRAM     3     2      1
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  2     1      1    6442
                                              8 COMRAM     2     1      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     6      1     429
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _calculator_get_key                                   4     2      2   17911
                                             18 COMRAM     3     1      2
                   _keypad_get_value
                 _lcd_8bit_send_data
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_data                                   6     4      2   11058
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
               _lcd_send_8bit_enable
 ---------------------------------------------------------------------------------
 (5) _lcd_send_8bit_enable                                 2     1      1    5157
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _keypad_get_value                                    10     8      2    6581
                                              8 COMRAM    10     8      2
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                 8     6      2    4913
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_read_logic                                  7     5      2     612
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculator_get_key
     _keypad_get_value
       _gpio_pin_read_logic
       _gpio_pin_write_logic
     _lcd_8bit_send_data
       _gpio_pin_write_logic
       _lcd_send_8bit_enable
         _gpio_pin_write_logic
   _ecu_layer_initialize
     _calculator_initialize
       _keypad_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_send_8bit_enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      24       5       28.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     18      7B       1       96.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9F      39        0.0%
DATA                 0      0      9F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Feb 27 23:26:11 2024

              __end_of_lcd_8bit_send_data 16F4                                        _h1 0033  
              keypad_get_value@is_pressed 0066                                       l132 1754  
                                     l133 1756                                       l230 1562  
                                     l243 16F0                                       l244 16F2  
                                     l236 167A                                       l237 167C  
                                     l229 1560                                       l158 11F6  
                                     l159 11F8                                       l415 1948  
                                     l463 1326                                       l482 1604  
                                     l298 18B4                                       l562 18E6  
                                     l483 1606                                       l299 18B6  
                                     l563 18E8                                       l492 1842  
                                     l477 144C                                       l493 1844  
                                     l478 144E                                       l568 187E  
                                     _cc1 0053                                       _cc2 004B  
                                     _hh1 0043                                       _hh2 003B  
                    keypad_initialize@ret 0066                       led_initialize@F3064 0079  
                                     wreg 0FE8                     relay_initialize@F3057 0075  
                                    l2400 1564                                      l2320 1374  
                                    l2312 1328                                      l2402 1578  
                                    l2322 13CA                                      l2314 133C  
                                    l2404 1598                                      l2316 1350  
                                    l2324 141A                                      l2500 106A  
                                    l2340 120E                                      l2420 170C  
                                    l2412 16F4                                      l3140 18EA  
                                    l2406 15A8                                      l3150 1436  
                                    l2510 1092                                      l2342 122E  
                                    l2422 1716                                      l2414 1708  
                                    l3142 18EE                                      l2408 1600  
                                    l2328 1422                                      l2520 10CC  
                                    l2512 10AA                                      l2360 1880  
                                    l2600 1692                                      l2344 124A  
                                    l2432 172C                                      l2424 1718  
                                    l3144 18FA                                      l2522 10DC  
                                    l2506 1072                                      l2530 110E  
                                    l2362 1890                                      l2610 16CC  
                                    l2602 169E                                      l2346 1252  
                                    l2354 12F8                                      l2338 11FA  
                                    l2370 1808                                      l2434 173A  
                                    l2426 1728                                      l2442 1450  
                                    l2540 113E                                      l2532 1128  
                                    l2516 10B2                                      l2508 1082  
                                    l2364 189C                                      l2612 16CE  
                                    l2348 12A8                                      l2356 1324  
                                    l2372 181C                                      l2436 173C  
                                    l2380 161C                                      l2460 14B6  
                                    l2452 1488                                      l2444 1464  
                                    l2620 18B8                                      l2550 1166  
                                    l2526 10F0                                      l2518 10B6  
                                    l2366 18B0                                      l2614 16DE  
                                    l2374 183E                                      l2438 1750  
                                    l2390 1656                                      l2382 1628  
                                    l2470 14FC                                      l2462 14C2  
                                    l2454 1494                                      l2446 1484  
                                    l2622 18C8                                      l2560 11A0  
                                    l2552 117E                                      l2528 10F4  
                                    l2608 16A2                                      l2616 16EC  
                                    l2392 1658                                      l2472 1516  
                                    l2464 14DE                                      l2456 1496  
                                    l2480 155C                                      l2624 18E2  
                                    l2562 11B0                                      l2546 1146  
                                    l2538 1130                                      l2490 103A  
                                    l2570 11DE                                      l2730 1864  
                                    l2394 1668                                      l2378 1608  
                                    l2474 1524                                      l2466 14E4  
                                    l2458 14A6                                      l2556 1186  
                                    l2548 1156                                      l2492 1054  
                                    l2572 11F2                                      l2484 1002  
                                    l2732 187E                                      l2388 162C  
                                    l2396 1676                                      l2476 1538  
                                    l2468 14F0                                      l2724 193E  
                                    l2566 11C4                                      l2558 118A  
                                    l2486 1026                                      l2726 1846  
                                    l2478 1544                                      l2568 11C8  
                                    l2728 1856                                      l2498 105C  
                                    l2598 167E                                      u1300 122E  
                                    u1301 122A                                      u1310 124A  
                                    u1311 1246                                      u1400 1578  
                                    u1240 133C                                      u1401 1574  
                                    u1241 1338                                      u1410 1598  
                                    u1250 1350                                      u1411 1594  
                                    u1251 134C                                      u1420 15A8  
                                    u1260 1370                                      u1500 1036  
                                    u1340 130E                                      u1324 1270  
                                    u1421 15A4                                      u1261 136C  
                                    u1501 1032                                      u1341 1308  
                                    u1325 126C                                      _LATA 0F89  
                                    u1510 1054                                      u1350 1890  
                                    u1334 12C6                                      _LATB 0F8A  
                                    u1511 1050                                      u1351 188C  
                                    u1335 12C2                                      _LATC 0F8B  
                                    u1600 11DE                                      u1520 1092  
                                    u1360 181C                                      u1440 1708  
                                    _LATD 0F8C                                      u1601 11DA  
                                    u1521 108E                                      u1361 1818  
                                    u1441 1704                                      _LATE 0F8D  
                                    u1434 15F0                                      u1274 1392  
                                    u1610 11EE                                      u1530 10CC  
                                    u1346 1310                                      u1290 120E  
                                    u1450 1728                                      u1370 161C  
                                    u1435 15EC                                      u1275 138E  
                                    u1611 11EA                                      u1531 10C8  
                                    u1291 120A                                      u1451 1724  
                                    u1371 1618                                      u2307 1546  
                                    u1284 13E8                                      u1540 10EC  
                                    u1460 174C                                      u1285 13E4  
                                    u1541 10E8                                      u1461 1748  
                                    u2237 1904                                      u1550 110A  
                                    u1390 1668                                      u1470 1464  
                                    u1551 1106                                      u1391 1664  
                                    u2247 14AC                                      u1471 1460  
                                    u1560 1128                                      u1640 1692  
                                    u1800 1856                                      u1384 1646  
                                    u1480 14A6                                      u1561 1124  
                                    u1641 168E                                      u1801 1852  
                                    u1385 1642                                      u2257 14C8  
                                    u1481 14A2                                      u1570 1166  
                                    u1490 1026                                      u1571 1162  
                                    u1491 1022                                      u2267 14E0  
                                    u1580 11A0                                      u1660 16DE  
                                    u1581 119C                                      u1661 16DA  
                                    u2277 1502                                      u1590 11C0  
                                    u1654 16BC                                      u1670 18C8  
                                    u1591 11BC                                      u1655 16B8  
                                    u2287 151C                                      u1671 18C4  
                                    u2297 1532            gpio_pin_read_logic@_pin_config 005B  
                                    _main 18EA                                      fsr1h 0FE2  
                                    fsr2h 0FDA                                      indf1 0FE7  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    fsr2l 0FD9                                      prodl 0FF3  
                                    start 0000                lcd_8bit_initialize@counter 006D  
           __end_of_lcd_8bit_send_command 167E                              ___param_bank 0000  
                  keypad_get_value@_value 0064                      _gpio_pin_write_logic 1328  
                                   ?_main 005B                       relay_turn_off@F3067 0073  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
                __end_of_keypad_get_value 11FA                   ??_calculator_initialize 0070  
                                   _value 007A                                     tablat 0FF5  
                                   status 0FD8            ?_gpio_pin_direction_initialize 005B  
                         __initialization 17B2                       keypad_get_value@ret 0067  
                            __end_of_main 191A                     ?_gpio_pin_write_logic 005B  
                 keypad_get_value@_keypad 0063                                    ??_main 0071  
                           __activetblptr 0002                          led_turn_on@F3069 0078  
               keypad_get_value@col_state 0068               keypad_get_value@row_counter 006B  
                                  clear_0 17F8                                    isa$std 0001  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0080  
                 __end_of__initialization 17FE                             ___rparam_used 0001  
                  ??_gpio_pin_write_logic 005D                            __pcstackCOMRAM 005B  
                            __pidataBANK0 191A                calculator_initialize@_calc 006F  
gpio_pin_direction_initialize@_pin_config 005B                   _SEVEN_SEGMENT_CA_VALUES 001F  
                      _lcd_8bit_send_data 167E                   _SEVEN_SEGMENT_CC_VALUES 0029  
                     ?_lcd_8bit_send_data 0065                                __pnvCOMRAM 007B  
                  lcd_8bit_initialize@ret 006E                         led_turn_off@F3074 0077  
                         led_toggle@F3079 0076                      ??_lcd_8bit_send_data 0067  
                           _keypad_values 0080                         ?_keypad_get_value 0063  
           __end_of_calculator_initialize 18EA                        ??_keypad_get_value 0065  
            __end_of_lcd_send_8bit_enable 18B8                  keypad_initialize@_keypad 0065  
                                 __Hparam 0000                                   __Lparam 0000  
                keypad_initialize@counter 0067                       _gpio_pin_initialize 1808  
                   _lcd_8bit_send_command 1608                       _gpio_pin_read_logic 1564  
                            __psmallconst 1000                                   _calc_v1 0090  
                                 __pcinit 17B2                                   __ramtop 1000  
                                 __ptext0 18EA                                   __ptext1 193E  
                                 __ptext2 18B8                                   __ptext3 1450  
                                 __ptext4 1608                                   __ptext5 16F4  
                                 __ptext6 1808                                   __ptext7 11FA  
                                 __ptext8 1846                                   __ptext9 167E  
                                 _lat_reg 000B           ??_gpio_pin_direction_initialize 005C  
                    ?_gpio_pin_initialize 0063                      ?_gpio_pin_read_logic 005B  
     gpio_pin_direction_initialize@Status 0061                      end_of_initialization 17FE  
                           __Lmediumconst 0000                   lcd_send_8bit_enable@ret 0064  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc1 0FE6  
                                 postinc2 0FDE                     calculator_get_key@ret 006F  
                   ??_gpio_pin_initialize 0064                     ??_gpio_pin_read_logic 005D  
                      relay_turn_on@F3062 0074                    ?_lcd_8bit_send_command 0065  
           lcd_8bit_send_command@_command 0066                __end_of_calculator_get_key 1880  
                           __pidataCOMRAM 1758                      _lcd_send_8bit_enable 1880  
                     start_initialization 17B2                       _lcd_8bit_initialize 1450  
   __end_of_gpio_pin_direction_initialize 1328             _gpio_pin_direction_initialize 11FA  
               lcd_8bit_send_data@counter 006A                      ?_lcd_8bit_initialize 006B  
                             __pdataBANK0 0080              __end_of_ecu_layer_initialize 194A  
                lcd_8bit_send_command@ret 0069                     ?_lcd_send_8bit_enable 0063  
                             __pbssCOMRAM 0073                  calculator_initialize@ret 0070  
                 lcd_8bit_initialize@_lcd 006B                     ??_lcd_8bit_initialize 006C  
         gpio_pin_write_logic@_pin_config 005B                 gpio_pin_initialize@Status 0064  
                             __smallconst 1000                     _calculator_initialize 18B8  
                 lcd_8bit_send_data@_data 0066                    ??_lcd_send_8bit_enable 0064  
                               copy_data0 17C6                                 copy_data1 17E6  
                calculator_get_key@_value 006E                         _keypad_initialize 16F4  
                      ?_keypad_initialize 0065                      _ecu_layer_initialize 193E  
                 ??_lcd_8bit_send_command 0067                                  __Hrparam 0000  
                                __Lrparam 0000                       ??_keypad_initialize 0066  
             __end_of_gpio_pin_initialize 1846               __end_of_gpio_pin_read_logic 1608  
          gpio_pin_initialize@_pin_config 0063                 lcd_8bit_send_command@_lcd 0065  
                      _calculator_get_key 1846                 __end_of_keypad_initialize 1758  
                                __ptext10 1880                                  __ptext11 1002  
                                __ptext12 1328                                  __ptext13 1564  
                  ?_calculator_initialize 006F                       ?_calculator_get_key 006D  
                   ?_ecu_layer_initialize 005B                          _keypad_get_value 1002  
                                isa$xinst 0000                    lcd_8bit_send_data@_lcd 0065  
                                _port_reg 0001                 gpio_pin_read_logic@Status 0061  
                                _tris_reg 0015                      ??_calculator_get_key 006F  
               gpio_pin_read_logic@_logic 005C                   calculator_get_key@_calc 006D  
             keypad_get_value@col_counter 0069                  lcd_send_8bit_enable@_lcd 0063  
            __end_of_gpio_pin_write_logic 1450                     lcd_8bit_send_data@ret 0069  
              gpio_pin_write_logic@Status 0062                gpio_pin_write_logic@_logic 005C  
                           _program_state 007B                    ??_ecu_layer_initialize 0071  
             __end_of_lcd_8bit_initialize 1564              lcd_8bit_send_command@counter 006A  
